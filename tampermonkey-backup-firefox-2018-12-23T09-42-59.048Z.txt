{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"Muxxu Kingdom - Expand Troop Transfer","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_arrayleft":false,"compat_uW_gmonkey":false,"compat_forvarin":false,"noframes":null,"awareOfChrome":false,"run_at":null,"override":{"use_includes":[],"orig_includes":["http://kingdom.en.muxxu.com/general*"],"merge_includes":true,"use_matches":[],"orig_matches":[],"merge_matches":false,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-idle","orig_noframes":null,"orig_connects":[]}},"storage":{"ts":1545471787195,"data":{}},"enabled":true,"position":1,"uuid":"0b9d6a7e-24db-4a21-ab6f-616fc79ce0a1","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBNdXh4dSBLaW5nZG9tIC0gRXhwYW5kIFRyb29wIFRyYW5zZmVyCi8vIEBuYW1lc3BhY2UgICAgaHR0cDovL3RhbXBlcm1vbmtleS5uZXQvCi8vIEB2ZXJzaW9uICAgICAgMC4xCi8vIEBkZXNjcmlwdGlvbiAgdHJ5IHRvIHRha2Ugb3ZlciB0aGUgd29ybGQhCi8vIEBhdXRob3IgICAgICAgWW91Ci8vIEBpbmNsdWRlICAgICAgaHR0cDovL2tpbmdkb20uZW4ubXV4eHUuY29tL2dlbmVyYWwqCi8vIEBncmFudCAgICAgICAgbm9uZQovLyA9PS9Vc2VyU2NyaXB0PT0KCihmdW5jdGlvbigpIHsKICAgICd1c2Ugc3RyaWN0JzsKdmFyIHggPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJtb3JlbWludXMiKTsKICAgIHZhciBhcnJheSA9IFsic29sZCIsImFyY2giLCJjYXYiLCJwYWwiLCJwaXEiLCJjaGV2IiwiY2FhIiwiYmFsIiwiY2F0Il07CiAgICBjb25zdCBsaXN0SXRlbXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcubW9yZW1pbnVzJyk7CiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxpc3RJdGVtcy5sZW5ndGg7IGkrKykgewogICAgICAgIHZhciBwbHVzMTAwID0gIjxsaT48YSBocmVmPVwiI1wiIGlkPVwicHNvbGRcIiBjbGFzcz1cInBsdXN0ZW5cIiBvbmNsaWNrPVwicmV0dXJuIGRlbHRhKCciK2FycmF5W2ldKyInLDEwMClcIiBzdHlsZT1cIm9wYWNpdHk6IDE7XCI+PC9hPjwvbGk+IjsKICAgICAgICB2YXIgbWludXMxMDAgPSAiPGxpPjxhIGhyZWY9XCIjXCIgaWQ9XCJtbXNvbGRcIiBjbGFzcz1cIm1pbnVzdGVuXCIgb25jbGljaz1cInJldHVybiBkZWx0YSgnIithcnJheVtpXSsiJywtMTAwKVwiIHN0eWxlPVwib3BhY2l0eTogMTtcIj48L2E+PC9saT4iOwogICAgICAgIHZhciBwbHVzMTAwMCA9ICI8bGk+PGEgaHJlZj1cIiNcIiBpZD1cInBzb2xkXCIgY2xhc3M9XCJwbHVzdGVuXCIgb25jbGljaz1cInJldHVybiBkZWx0YSgnIithcnJheVtpXSsiJywxMDAwKVwiIHN0eWxlPVwib3BhY2l0eTogMTtcIj48L2E+PC9saT4iOwogICAgICAgIHZhciBtaW51czEwMDAgPSAiPGxpPjxhIGhyZWY9XCIjXCIgaWQ9XCJtbXNvbGRcIiBjbGFzcz1cIm1pbnVzdGVuXCIgb25jbGljaz1cInJldHVybiBkZWx0YSgnIithcnJheVtpXSsiJywtMTAwMClcIiBzdHlsZT1cIm9wYWNpdHk6IDE7XCI+PC9hPjwvbGk+IjsKICAgICAgICB2YXIgdHIxID0gIjx0cj48dGQgc3R5bGU9XCJib3JkZXI6IDBweDsgcGFkZGluZzowcHg7XCI+IitwbHVzMTAwKyI8L3RkPjx0ZCBzdHlsZT1cImJvcmRlcjogMHB4OyBwYWRkaW5nOjBweDtcIj4iK21pbnVzMTAwKyI8L3RkPjwvdHI+IjsKICAgICAgICB2YXIgdHIyID0gIjx0cj48dGQgc3R5bGU9XCJib3JkZXI6IDBweDsgcGFkZGluZzowcHg7XCI+IitwbHVzMTAwMCsiPC90ZD48dGQgc3R5bGU9XCJib3JkZXI6IDBweDsgcGFkZGluZzowcHg7XCI+IittaW51czEwMDArIjwvdGQ+PC90cj4iOwogICAgICAgIHZhciB0YWJsZT0gIjx0YWJsZSBzdHlsZT1cImJvcmRlci1jb2xsYXBzZTpjb2xsYXBzZTtcIj4iK3RyMSt0cjIrIjwvdGFibGU+IjsKICAgICAgICBsaXN0SXRlbXNbaV0uaW5uZXJIVE1MICs9IHRhYmxlOwp9CgoKCn0pKCk7"},{"name":"CTRL+W","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_arrayleft":false,"compat_uW_gmonkey":false,"compat_forvarin":false,"noframes":null,"awareOfChrome":false,"run_at":null,"override":{"use_includes":[],"orig_includes":["http://mush.vg/*","http://mush.twinoid.com/*","http://mush.twinoid.es/*"],"merge_includes":true,"use_matches":[],"orig_matches":[],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-idle","orig_noframes":null,"orig_connects":["ctrl-w.badconker.fr"]}},"storage":{"ts":1536858701563,"data":{}},"enabled":true,"position":2,"file_url":"https://raw.github.com/badconker/ctrl-w/release/CTRLW.user.js","uuid":"c01715d6-13f3-454f-8258-b1b6c985a0d4","source":"","resources":[{"meta":{"name":"Mush.js","url":"https://raw.github.com/badconker/ctrl-w/release/lib/Mush.js","ts":1544430113008,"mimetype":"text/javascript"},"source":"dmFyICRoeENsYXNzZXMgPSB7fSwkZXN0ciA9IGZ1bmN0aW9uKCkgeyByZXR1cm4ganMuQm9vdC5fX3N0cmluZ19yZWModGhpcywnJyk7IH07CmZ1bmN0aW9uICRleHRlbmQoZnJvbSwgZmllbGRzKSB7CglmdW5jdGlvbiBpbmhlcml0KCkge307IGluaGVyaXQucHJvdG90eXBlID0gZnJvbTsgdmFyIHByb3RvID0gbmV3IGluaGVyaXQoKTsKCWZvciAodmFyIG5hbWUgaW4gZmllbGRzKSBwcm90b1tuYW1lXSA9IGZpZWxkc1tuYW1lXTsKCWlmKCBmaWVsZHMudG9TdHJpbmcgIT09IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcgKSBwcm90by50b1N0cmluZyA9IGZpZWxkcy50b1N0cmluZzsKCXJldHVybiBwcm90bzsKfQpqcy5Db29raWUgPSBmdW5jdGlvbigpIHsgfQokaHhDbGFzc2VzWyJqcy5Db29raWUiXSA9IGpzLkNvb2tpZTsKCnZhciBDcm9zc0NvbnN0cyA9IGZ1bmN0aW9uKCkgeyB9CiRoeENsYXNzZXNbIkNyb3NzQ29uc3RzIl0gPSBDcm9zc0NvbnN0czsKQ3Jvc3NDb25zdHMuX19uYW1lX18gPSBbIkNyb3NzQ29uc3RzIl07CkNyb3NzQ29uc3RzLkNPT0tfU0VMID0gInNlbCI7CkNyb3NzQ29uc3RzLkNPT0tfQ1VSQ0hBVCA9ICJjdXJDaGF0IjsKQ3Jvc3NDb25zdHMuUkVNT1RJTkdfQ09NX0NIQU5ORUwgPSAiZGVmYXVsdCI7CkNyb3NzQ29uc3RzLkNPT0tfSU5WX09GRlNFVF9MID0gImludl9vZmZzZXRfbCI7CkNyb3NzQ29uc3RzLkJBU0VMSU5FX05PTkUgPSA0Mzk7CkNyb3NzQ29uc3RzLkJBU0VMSU5FX0NMT1NFVCA9IDI2MDsKQ3Jvc3NDb25zdHMuQkFTRUxJTkVfQUNUSU9OUyA9IDM1MDsKQ3Jvc3NDb25zdHMuSVNPX1ZFUlNJT04gPSAyMTsKQ3Jvc3NDb25zdHMuTkJfUFJJVkFURV9DSEFOID0gMzsKQ3Jvc3NDb25zdHMuUFJJVkFURV9DSEFOX1NUQVJUID0gNzsKCgpqcy5Db29raWUuX19uYW1lX18gPSBbImpzIiwiQ29va2llIl07CmpzLkNvb2tpZS5zZXQgPSBmdW5jdGlvbihuYW1lLHZhbHVlLGV4cGlyZURlbGF5LHBhdGgsZG9tYWluKSB7Cgl2YXIgcyA9IG5hbWUgKyAiPSIgKyBTdHJpbmdUb29scy51cmxFbmNvZGUodmFsdWUpOwoJaWYoZXhwaXJlRGVsYXkgIT0gbnVsbCkgewoJCXZhciBkOwoJCXZhciBkMSA9IG5ldyBEYXRlKCk7CgkJdmFyIHQgPSBkMS5nZXRUaW1lKCkgKyBleHBpcmVEZWxheSAqIDEwMDA7CgkJdmFyIGQyID0gbmV3IERhdGUoKTsKCQlkMi5zZXRUaW1lKHQpOwoJCWQgPSBkMjsKCQlzICs9ICI7ZXhwaXJlcz0iICsgZC50b0dNVFN0cmluZygpOwoJfQoJaWYocGF0aCAhPSBudWxsKSBzICs9ICI7cGF0aD0iICsgcGF0aDsKCWlmKGRvbWFpbiAhPSBudWxsKSBzICs9ICI7ZG9tYWluPSIgKyBkb21haW47Cgl3aW5kb3cuZG9jdW1lbnQuY29va2llID0gczsKfQpqcy5Db29raWUuYWxsID0gZnVuY3Rpb24oKSB7Cgl2YXIgaCA9IG5ldyBoYXhlLmRzLlN0cmluZ01hcCgpOwoJdmFyIGEgPSB3aW5kb3cuZG9jdW1lbnQuY29va2llLnNwbGl0KCI7Iik7Cgl2YXIgX2cgPSAwOwoJd2hpbGUoX2cgPCBhLmxlbmd0aCkgewoJCXZhciBlID0gYVtfZ107CgkJKytfZzsKCQllID0gU3RyaW5nVG9vbHMubHRyaW0oZSk7CgkJdmFyIHQgPSBlLnNwbGl0KCI9Iik7CgkJaWYodC5sZW5ndGggPCAyKSBjb250aW51ZTsKCQloLnNldCh0WzBdLFN0cmluZ1Rvb2xzLnVybERlY29kZSh0WzFdKSk7Cgl9CglyZXR1cm4gaDsKfQpqcy5Db29raWUuZ2V0ID0gZnVuY3Rpb24obmFtZSkgewoJcmV0dXJuIGpzLkNvb2tpZS5hbGwoKS5nZXQobmFtZSk7Cn0KCmpzLkxpYiA9IGZ1bmN0aW9uKCkgeyB9CiRoeENsYXNzZXNbImpzLkxpYiJdID0ganMuTGliOwpqcy5MaWIuX19uYW1lX18gPSBbImpzIiwiTGliIl07CmlmICh0eXBlb2YgZG9jdW1lbnQgIT0gInVuZGVmaW5lZCIpIGpzLkxpYi5kb2N1bWVudCA9IGRvY3VtZW50OwppZiAodHlwZW9mIHdpbmRvdyAhPSAidW5kZWZpbmVkIikgewoJanMuTGliLndpbmRvdyA9IHdpbmRvdzsKCWpzLkxpYi53aW5kb3cub25lcnJvciA9IGZ1bmN0aW9uKG1zZyx1cmwsbGluZSkgewoJCXZhciBmID0ganMuTGliLm9uZXJyb3I7CgkJaWYoZiA9PSBudWxsKSByZXR1cm4gZmFsc2U7CgkJcmV0dXJuIGYobXNnLFt1cmwgKyAiOiIgKyBsaW5lXSk7Cgl9Owp9Cgpqcy5Ccm93c2VyID0gZnVuY3Rpb24oKSB7IH0KJGh4Q2xhc3Nlc1sianMuQnJvd3NlciJdID0ganMuQnJvd3NlcjsKanMuQnJvd3Nlci5fX25hbWVfXyA9IFsianMiLCJCcm93c2VyIl07CmpzLkJyb3dzZXIuZ2V0TG9jYWxTdG9yYWdlID0gZnVuY3Rpb24oKSB7Cgl0cnkgewoJCXZhciBzID0gd2luZG93LmxvY2FsU3RvcmFnZTsKCQlzLmdldEl0ZW0oIiIpOwoJCXJldHVybiBzOwoJfSBjYXRjaChlKSB7CgkJcmV0dXJuIG51bGw7Cgl9Cn0KanMuQnJvd3Nlci5nZXRTZXNzaW9uU3RvcmFnZSA9IGZ1bmN0aW9uKCkgewoJdHJ5IHsKCQl2YXIgcyA9IHdpbmRvdy5zZXNzaW9uU3RvcmFnZTsKCQlzLmdldEl0ZW0oIiIpOwoJCXJldHVybiBzOwoJfSBjYXRjaChlKSB7CgkJcmV0dXJuIG51bGw7Cgl9Cn0KanMuQnJvd3Nlci5jcmVhdGVYTUxIdHRwUmVxdWVzdCA9IGZ1bmN0aW9uKCkgewoJaWYgKHR5cGVvZiBYTUxIdHRwUmVxdWVzdCAhPSAidW5kZWZpbmVkIikgcmV0dXJuIG5ldyBYTUxIdHRwUmVxdWVzdCgpOwoJaWYgKHR5cGVvZiBBY3RpdmVYT2JqZWN0ICE9ICJ1bmRlZmluZWQiKSByZXR1cm4gbmV3IEFjdGl2ZVhPYmplY3QoIk1pY3Jvc29mdC5YTUxIVFRQIik7Cgl0aHJvdyAiVW5hYmxlIHRvIGNyZWF0ZSBYTUxIdHRwUmVxdWVzdCBvYmplY3QuIjsKfQoKdmFyIElNYXAgPSBmdW5jdGlvbigpIHsgfQokaHhDbGFzc2VzWyJJTWFwIl0gPSBJTWFwOwpJTWFwLl9fbmFtZV9fID0gWyJJTWFwIl07CnZhciBoYXhlID0ge30KaGF4ZS5kcyA9IHt9CmhheGUuZHMuU3RyaW5nTWFwID0gZnVuY3Rpb24oKSB7Cgl0aGlzLmggPSB7fTsKfTsKJGh4Q2xhc3Nlc1siaGF4ZS5kcy5TdHJpbmdNYXAiXSA9IGhheGUuZHMuU3RyaW5nTWFwOwpoYXhlLmRzLlN0cmluZ01hcC5fX25hbWVfXyA9IFsiaGF4ZSIsImRzIiwiU3RyaW5nTWFwIl07CmhheGUuZHMuU3RyaW5nTWFwLl9faW50ZXJmYWNlc19fID0gW0lNYXBdOwpoYXhlLmRzLlN0cmluZ01hcC5wcm90b3R5cGUgPSB7CglzZXQ6IGZ1bmN0aW9uKGtleSx2YWx1ZSkgewoJCXRoaXMuaFsiJCIgKyBrZXldID0gdmFsdWU7Cgl9CgksZ2V0OiBmdW5jdGlvbihrZXkpIHsKCQlyZXR1cm4gdGhpcy5oWyIkIiArIGtleV07Cgl9CgksZXhpc3RzOiBmdW5jdGlvbihrZXkpIHsKCQlyZXR1cm4gdGhpcy5oLmhhc093blByb3BlcnR5KCIkIiArIGtleSk7Cgl9Cgksa2V5czogZnVuY3Rpb24oKSB7CgkJdmFyIGEgPSBbXTsKCQlmb3IoIHZhciBrZXkgaW4gdGhpcy5oICkgewoJCWlmKHRoaXMuaC5oYXNPd25Qcm9wZXJ0eShrZXkpKSBhLnB1c2goa2V5LnN1YnN0cigxKSk7CgkJfQoJCXJldHVybiBIeE92ZXJyaWRlcy5pdGVyKGEpOwoJfQoJLF9fY2xhc3NfXzogaGF4ZS5kcy5TdHJpbmdNYXAKfQpoYXhlLnJlbW90aW5nID0ge30KaGF4ZS5yZW1vdGluZy5Db250ZXh0ID0gZnVuY3Rpb24oKSB7Cgl0aGlzLm9iamVjdHMgPSBuZXcgaGF4ZS5kcy5TdHJpbmdNYXAoKTsKfTsKJGh4Q2xhc3Nlc1siaGF4ZS5yZW1vdGluZy5Db250ZXh0Il0gPSBoYXhlLnJlbW90aW5nLkNvbnRleHQ7CmhheGUucmVtb3RpbmcuQ29udGV4dC5fX25hbWVfXyA9IFsiaGF4ZSIsInJlbW90aW5nIiwiQ29udGV4dCJdOwpoYXhlLnJlbW90aW5nLkNvbnRleHQucHJvdG90eXBlID0gewoJYWRkT2JqZWN0OiBmdW5jdGlvbihuYW1lLG9iaixyZWN1cnNpdmUpIHsKCQl0aGlzLm9iamVjdHMuc2V0KG5hbWUseyBvYmogOiBvYmosIHJlYyA6IHJlY3Vyc2l2ZX0pOwoJfQoJLGNhbGw6IGZ1bmN0aW9uKHBhdGgscGFyYW1zKSB7CgkJaWYocGF0aC5sZW5ndGggPCAyKSB0aHJvdyAiSW52YWxpZCBwYXRoICciICsgcGF0aC5qb2luKCIuIikgKyAiJyI7CgkJdmFyIGluZiA9IHRoaXMub2JqZWN0cy5nZXQocGF0aFswXSk7CgkJaWYoaW5mID09IG51bGwpIHRocm93ICJObyBzdWNoIG9iamVjdCAiICsgcGF0aFswXTsKCQl2YXIgbyA9IGluZi5vYmo7CgkJdmFyIG07CgkJdmFyIHYgPSBudWxsOwoJCXRyeSB7CgkJCXYgPSBvW3BhdGhbMV1dOwoJCX0gY2F0Y2goIGUgKSB7CgkJfQoJCW0gPSB2OwoJCWlmKHBhdGgubGVuZ3RoID4gMikgewoJCQlpZighaW5mLnJlYykgdGhyb3cgIkNhbid0IGFjY2VzcyAiICsgcGF0aC5qb2luKCIuIik7CgkJCXZhciBfZzEgPSAyOwoJCQl2YXIgX2cgPSBwYXRoLmxlbmd0aDsKCQkJd2hpbGUoX2cxIDwgX2cpIHsKCQkJCXZhciBpID0gX2cxKys7CgkJCQlvID0gbTsKCQkJCXZhciB2ID0gbnVsbDsKCQkJCXRyeSB7CgkJCQkJdiA9IG9bcGF0aFtpXV07CgkJCQl9IGNhdGNoKCBlICkgewoJCQkJfQoJCQkJbSA9IHY7CgkJCX0KCQl9CgkJaWYoIVJlZmxlY3QuaXNGdW5jdGlvbihtKSkgdGhyb3cgIk5vIHN1Y2ggbWV0aG9kICIgKyBwYXRoLmpvaW4oIi4iKTsKCQlyZXR1cm4gbS5hcHBseShvLHBhcmFtcyk7Cgl9CgksX19jbGFzc19fOiBoYXhlLnJlbW90aW5nLkNvbnRleHQKfQpoYXhlLnJlbW90aW5nLkV4dGVybmFsQ29ubmVjdGlvbiA9IGZ1bmN0aW9uKGRhdGEscGF0aCkgewoJdGhpcy5fX2RhdGEgPSBkYXRhOwoJdGhpcy5fX3BhdGggPSBwYXRoOwp9OwoKaGF4ZS5IdHRwID0gZnVuY3Rpb24odXJsKSB7Cgl0aGlzLnVybCA9IHVybDsKCXRoaXMuaGVhZGVycyA9IG5ldyBMaXN0KCk7Cgl0aGlzLnBhcmFtcyA9IG5ldyBMaXN0KCk7Cgl0aGlzLmFzeW5jID0gdHJ1ZTsKfTsKJGh4Q2xhc3Nlc1siaGF4ZS5IdHRwIl0gPSBoYXhlLkh0dHA7CmhheGUuSHR0cC5fX25hbWVfXyA9IFsiaGF4ZSIsIkh0dHAiXTsKaGF4ZS5IdHRwLnByb3RvdHlwZSA9IHsKCXNldFBhcmFtZXRlcjogZnVuY3Rpb24ocGFyYW0sdmFsdWUpIHsKCQl0aGlzLnBhcmFtcyA9IExhbWJkYS5maWx0ZXIodGhpcy5wYXJhbXMsZnVuY3Rpb24ocCkgewoJCQlyZXR1cm4gcC5wYXJhbSAhPSBwYXJhbTsKCQl9KTsKCQl0aGlzLnBhcmFtcy5wdXNoKHsgcGFyYW0gOiBwYXJhbSwgdmFsdWUgOiB2YWx1ZX0pOwoJCXJldHVybiB0aGlzOwoJfQoJLHJlcXVlc3Q6IGZ1bmN0aW9uKHBvc3QpIHsKCQl2YXIgbWUgPSB0aGlzOwoJCW1lLnJlc3BvbnNlRGF0YSA9IG51bGw7CgkJdmFyIHIgPSBqcy5Ccm93c2VyLmNyZWF0ZVhNTEh0dHBSZXF1ZXN0KCk7CgkJdmFyIG9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKF8pIHsKCQkJaWYoci5yZWFkeVN0YXRlICE9IDQpIHJldHVybjsKCQkJdmFyIHM7CgkJCXRyeSB7CgkJCQlzID0gci5zdGF0dXM7CgkJCX0gY2F0Y2goIGUgKSB7CgkJCQlzID0gbnVsbDsKCQkJfQoJCQlpZihzID09IHVuZGVmaW5lZCkgcyA9IG51bGw7CgkJCWlmKHMgIT0gbnVsbCkgbWUub25TdGF0dXMocyk7CgkJCWlmKHMgIT0gbnVsbCAmJiBzID49IDIwMCAmJiBzIDwgNDAwKSBtZS5vbkRhdGEobWUucmVzcG9uc2VEYXRhID0gci5yZXNwb25zZVRleHQpOyBlbHNlIGlmKHMgPT0gbnVsbCkgbWUub25FcnJvcigiRmFpbGVkIHRvIGNvbm5lY3Qgb3IgcmVzb2x2ZSBob3N0Iik7IGVsc2Ugc3dpdGNoKHMpIHsKCQkJY2FzZSAxMjAyOToKCQkJCW1lLm9uRXJyb3IoIkZhaWxlZCB0byBjb25uZWN0IHRvIGhvc3QiKTsKCQkJCWJyZWFrOwoJCQljYXNlIDEyMDA3OgoJCQkJbWUub25FcnJvcigiVW5rbm93biBob3N0Iik7CgkJCQlicmVhazsKCQkJZGVmYXVsdDoKCQkJCW1lLnJlc3BvbnNlRGF0YSA9IHIucmVzcG9uc2VUZXh0OwoJCQkJbWUub25FcnJvcigiSHR0cCBFcnJvciAjIiArIHIuc3RhdHVzKTsKCQkJfQoJCX07CgkJaWYodGhpcy5hc3luYykgci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBvbnJlYWR5c3RhdGVjaGFuZ2U7CgkJdmFyIHVyaSA9IHRoaXMucG9zdERhdGE7CgkJaWYodXJpICE9IG51bGwpIHBvc3QgPSB0cnVlOyBlbHNlIHsKCQkJdmFyICRpdDAgPSB0aGlzLnBhcmFtcy5pdGVyYXRvcigpOwoJCQl3aGlsZSggJGl0MC5oYXNOZXh0KCkgKSB7CgkJCQl2YXIgcCA9ICRpdDAubmV4dCgpOwoJCQkJaWYodXJpID09IG51bGwpIHVyaSA9ICIiOyBlbHNlIHVyaSArPSAiJiI7CgkJCQl1cmkgKz0gU3RyaW5nVG9vbHMudXJsRW5jb2RlKHAucGFyYW0pICsgIj0iICsgU3RyaW5nVG9vbHMudXJsRW5jb2RlKHAudmFsdWUpOwoJCQl9CgkJfQoJCXRyeSB7CgkJCWlmKHBvc3QpIHIub3BlbigiUE9TVCIsdGhpcy51cmwsdGhpcy5hc3luYyk7IGVsc2UgaWYodXJpICE9IG51bGwpIHsKCQkJCXZhciBxdWVzdGlvbiA9IHRoaXMudXJsLnNwbGl0KCI/IikubGVuZ3RoIDw9IDE7CgkJCQlyLm9wZW4oIkdFVCIsdGhpcy51cmwgKyAocXVlc3Rpb24/Ij8iOiImIikgKyB1cmksdGhpcy5hc3luYyk7CgkJCQl1cmkgPSBudWxsOwoJCQl9IGVsc2Ugci5vcGVuKCJHRVQiLHRoaXMudXJsLHRoaXMuYXN5bmMpOwoJCX0gY2F0Y2goIGUgKSB7CgkJCXRoaXMub25FcnJvcihlLnRvU3RyaW5nKCkpOwoJCQlyZXR1cm47CgkJfQoJCWlmKCFMYW1iZGEuZXhpc3RzKHRoaXMuaGVhZGVycyxmdW5jdGlvbihoKSB7CgkJCXJldHVybiBoLmhlYWRlciA9PSAiQ29udGVudC1UeXBlIjsKCQl9KSAmJiBwb3N0ICYmIHRoaXMucG9zdERhdGEgPT0gbnVsbCkgci5zZXRSZXF1ZXN0SGVhZGVyKCJDb250ZW50LVR5cGUiLCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQiKTsKCQl2YXIgJGl0MSA9IHRoaXMuaGVhZGVycy5pdGVyYXRvcigpOwoJCXdoaWxlKCAkaXQxLmhhc05leHQoKSApIHsKCQkJdmFyIGggPSAkaXQxLm5leHQoKTsKCQkJci5zZXRSZXF1ZXN0SGVhZGVyKGguaGVhZGVyLGgudmFsdWUpOwoJCX0KCQlyLnNlbmQodXJpKTsKCQlpZighdGhpcy5hc3luYykgb25yZWFkeXN0YXRlY2hhbmdlKG51bGwpOwoJfQoJLG9uRGF0YTogZnVuY3Rpb24oZGF0YSkgewoJfQoJLG9uRXJyb3I6IGZ1bmN0aW9uKG1zZykgewoJfQoJLG9uU3RhdHVzOiBmdW5jdGlvbihzdGF0dXMpIHsKCX0KCSxfX2NsYXNzX186IGhheGUuSHR0cAp9CmhheGUuVGltZXIgPSBmdW5jdGlvbih0aW1lX21zKSB7Cgl2YXIgbWUgPSB0aGlzOwoJdGhpcy5pZCA9IHNldEludGVydmFsKGZ1bmN0aW9uKCkgewoJCW1lLnJ1bigpOwoJfSx0aW1lX21zKTsKfTsKJGh4Q2xhc3Nlc1siaGF4ZS5UaW1lciJdID0gaGF4ZS5UaW1lcjsKaGF4ZS5UaW1lci5fX25hbWVfXyA9IFsiaGF4ZSIsIlRpbWVyIl07CmhheGUuVGltZXIuZGVsYXkgPSBmdW5jdGlvbihmLHRpbWVfbXMpIHsKCXZhciB0ID0gbmV3IGhheGUuVGltZXIodGltZV9tcyk7Cgl0LnJ1biA9IGZ1bmN0aW9uKCkgewoJCXQuc3RvcCgpOwoJCWYoKTsKCX07CglyZXR1cm4gdDsKfTsKaGF4ZS5UaW1lci5wcm90b3R5cGUgPSB7CglzdG9wOiBmdW5jdGlvbigpIHsKCQlpZih0aGlzLmlkID09IG51bGwpIHJldHVybjsKCQljbGVhckludGVydmFsKHRoaXMuaWQpOwoJCXRoaXMuaWQgPSBudWxsOwoJfQoJLHJ1bjogZnVuY3Rpb24oKSB7Cgl9CgksX19jbGFzc19fOiBoYXhlLlRpbWVyCn07CgoKdmFyIFN0cmluZ0J1ZiA9IGZ1bmN0aW9uKCkgewoJdGhpcy5iID0gIiI7Cn07CiRoeENsYXNzZXNbIlN0cmluZ0J1ZiJdID0gU3RyaW5nQnVmOwpTdHJpbmdCdWYuX19uYW1lX18gPSBbIlN0cmluZ0J1ZiJdOwpTdHJpbmdCdWYucHJvdG90eXBlID0gewoJYWRkOiBmdW5jdGlvbih4KSB7CgkJdGhpcy5iICs9IFN0ZC5zdHJpbmcoeCk7Cgl9CgksYWRkQ2hhcjogZnVuY3Rpb24oYykgewoJCXRoaXMuYiArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGMpOwoJfQoJLF9fY2xhc3NfXzogU3RyaW5nQnVmCn07Cgp2YXIgVHlwZSA9IGZ1bmN0aW9uKCkgeyB9OwokaHhDbGFzc2VzWyJUeXBlIl0gPSBUeXBlOwpUeXBlLl9fbmFtZV9fID0gWyJUeXBlIl07ClR5cGUuZ2V0Q2xhc3NOYW1lID0gZnVuY3Rpb24oYykgewoJdmFyIGEgPSBjLl9fbmFtZV9fOwoJcmV0dXJuIGEuam9pbigiLiIpOwp9OwpUeXBlLmdldEVudW1OYW1lID0gZnVuY3Rpb24oZSkgewoJdmFyIGEgPSBlLl9fZW5hbWVfXzsKCXJldHVybiBhLmpvaW4oIi4iKTsKfTsKVHlwZS5yZXNvbHZlQ2xhc3MgPSBmdW5jdGlvbihuYW1lKSB7Cgl2YXIgY2wgPSAkaHhDbGFzc2VzW25hbWVdOwoJaWYoY2wgPT0gbnVsbCB8fCAhY2wuX19uYW1lX18pIHJldHVybiBudWxsOwoJcmV0dXJuIGNsOwp9OwpUeXBlLnJlc29sdmVFbnVtID0gZnVuY3Rpb24obmFtZSkgewoJdmFyIGUgPSAkaHhDbGFzc2VzW25hbWVdOwoJaWYoZSA9PSBudWxsIHx8ICFlLl9fZW5hbWVfXykgcmV0dXJuIG51bGw7CglyZXR1cm4gZTsKfTsKVHlwZS5jcmVhdGVJbnN0YW5jZSA9IGZ1bmN0aW9uKGNsLGFyZ3MpIHsKCXZhciBfZyA9IGFyZ3MubGVuZ3RoOwoJc3dpdGNoKF9nKSB7CgkJY2FzZSAwOgoJCQlyZXR1cm4gbmV3IGNsKCk7CgkJY2FzZSAxOgoJCQlyZXR1cm4gbmV3IGNsKGFyZ3NbMF0pOwoJCWNhc2UgMjoKCQkJcmV0dXJuIG5ldyBjbChhcmdzWzBdLGFyZ3NbMV0pOwoJCWNhc2UgMzoKCQkJcmV0dXJuIG5ldyBjbChhcmdzWzBdLGFyZ3NbMV0sYXJnc1syXSk7CgkJY2FzZSA0OgoJCQlyZXR1cm4gbmV3IGNsKGFyZ3NbMF0sYXJnc1sxXSxhcmdzWzJdLGFyZ3NbM10pOwoJCWNhc2UgNToKCQkJcmV0dXJuIG5ldyBjbChhcmdzWzBdLGFyZ3NbMV0sYXJnc1syXSxhcmdzWzNdLGFyZ3NbNF0pOwoJCWNhc2UgNjoKCQkJcmV0dXJuIG5ldyBjbChhcmdzWzBdLGFyZ3NbMV0sYXJnc1syXSxhcmdzWzNdLGFyZ3NbNF0sYXJnc1s1XSk7CgkJY2FzZSA3OgoJCQlyZXR1cm4gbmV3IGNsKGFyZ3NbMF0sYXJnc1sxXSxhcmdzWzJdLGFyZ3NbM10sYXJnc1s0XSxhcmdzWzVdLGFyZ3NbNl0pOwoJCWNhc2UgODoKCQkJcmV0dXJuIG5ldyBjbChhcmdzWzBdLGFyZ3NbMV0sYXJnc1syXSxhcmdzWzNdLGFyZ3NbNF0sYXJnc1s1XSxhcmdzWzZdLGFyZ3NbN10pOwoJCWRlZmF1bHQ6CgkJCXRocm93ICJUb28gbWFueSBhcmd1bWVudHMiOwoJfQoJcmV0dXJuIG51bGw7Cn07ClR5cGUuY3JlYXRlRW1wdHlJbnN0YW5jZSA9IGZ1bmN0aW9uKGNsKSB7CglmdW5jdGlvbiBlbXB0eSgpIHt9OyBlbXB0eS5wcm90b3R5cGUgPSBjbC5wcm90b3R5cGU7CglyZXR1cm4gbmV3IGVtcHR5KCk7Cn07ClR5cGUuY3JlYXRlRW51bSA9IGZ1bmN0aW9uKGUsY29uc3RyLHBhcmFtcykgewoJdmFyIGYgPSBSZWZsZWN0LmZpZWxkKGUsY29uc3RyKTsKCWlmKGYgPT0gbnVsbCkgdGhyb3cgIk5vIHN1Y2ggY29uc3RydWN0b3IgIiArIGNvbnN0cjsKCWlmKFJlZmxlY3QuaXNGdW5jdGlvbihmKSkgewoJCWlmKHBhcmFtcyA9PSBudWxsKSB0aHJvdyAiQ29uc3RydWN0b3IgIiArIGNvbnN0ciArICIgbmVlZCBwYXJhbWV0ZXJzIjsKCQlyZXR1cm4gZi5hcHBseShlLHBhcmFtcyk7Cgl9CglpZihwYXJhbXMgIT0gbnVsbCAmJiBwYXJhbXMubGVuZ3RoICE9IDApIHRocm93ICJDb25zdHJ1Y3RvciAiICsgY29uc3RyICsgIiBkb2VzIG5vdCBuZWVkIHBhcmFtZXRlcnMiOwoJcmV0dXJuIGY7Cn07ClR5cGUuY3JlYXRlRW51bUluZGV4ID0gZnVuY3Rpb24oZSxpbmRleCxwYXJhbXMpIHsKCXZhciBjID0gZS5fX2NvbnN0cnVjdHNfX1tpbmRleF07CglpZihjID09IG51bGwpIHRocm93IGluZGV4ICsgIiBpcyBub3QgYSB2YWxpZCBlbnVtIGNvbnN0cnVjdG9yIGluZGV4IjsKCXJldHVybiBUeXBlLmNyZWF0ZUVudW0oZSxjLHBhcmFtcyk7Cn07ClR5cGUuZ2V0RW51bUNvbnN0cnVjdHMgPSBmdW5jdGlvbihlKSB7Cgl2YXIgYSA9IGUuX19jb25zdHJ1Y3RzX187CglyZXR1cm4gYS5zbGljZSgpOwp9OwpUeXBlWyJ0eXBlb2YiXSA9IGZ1bmN0aW9uKHYpIHsKCXZhciBfZyA9IHR5cGVvZih2KTsKCXN3aXRjaChfZykgewoJCWNhc2UgImJvb2xlYW4iOgoJCQlyZXR1cm4gVmFsdWVUeXBlLlRCb29sOwoJCWNhc2UgInN0cmluZyI6CgkJCXJldHVybiBWYWx1ZVR5cGUuVENsYXNzKFN0cmluZyk7CgkJY2FzZSAibnVtYmVyIjoKCQkJaWYoTWF0aC5jZWlsKHYpID09IHYgJSAyMTQ3NDgzNjQ4LjApIHJldHVybiBWYWx1ZVR5cGUuVEludDsKCQkJcmV0dXJuIFZhbHVlVHlwZS5URmxvYXQ7CgkJY2FzZSAib2JqZWN0IjoKCQkJaWYodiA9PSBudWxsKSByZXR1cm4gVmFsdWVUeXBlLlROdWxsOwoJCQl2YXIgZSA9IHYuX19lbnVtX187CgkJCWlmKGUgIT0gbnVsbCkgcmV0dXJuIFZhbHVlVHlwZS5URW51bShlKTsKCQkJdmFyIGM7CgkJCWlmKCh2IGluc3RhbmNlb2YgQXJyYXkpICYmIHYuX19lbnVtX18gPT0gbnVsbCkgYyA9IEFycmF5OyBlbHNlIGMgPSB2Ll9fY2xhc3NfXzsKCQkJaWYoYyAhPSBudWxsKSByZXR1cm4gVmFsdWVUeXBlLlRDbGFzcyhjKTsKCQkJcmV0dXJuIFZhbHVlVHlwZS5UT2JqZWN0OwoJCWNhc2UgImZ1bmN0aW9uIjoKCQkJaWYodi5fX25hbWVfXyB8fCB2Ll9fZW5hbWVfXykgcmV0dXJuIFZhbHVlVHlwZS5UT2JqZWN0OwoJCQlyZXR1cm4gVmFsdWVUeXBlLlRGdW5jdGlvbjsKCQljYXNlICJ1bmRlZmluZWQiOgoJCQlyZXR1cm4gVmFsdWVUeXBlLlROdWxsOwoJCWRlZmF1bHQ6CgkJCXJldHVybiBWYWx1ZVR5cGUuVFVua25vd247Cgl9Cn07ClR5cGUuZW51bUVxID0gZnVuY3Rpb24oYSxiKSB7CglpZihhID09IGIpIHJldHVybiB0cnVlOwoJdHJ5IHsKCQlpZihhWzBdICE9IGJbMF0pIHJldHVybiBmYWxzZTsKCQl2YXIgX2cxID0gMjsKCQl2YXIgX2cgPSBhLmxlbmd0aDsKCQl3aGlsZShfZzEgPCBfZykgewoJCQl2YXIgaSA9IF9nMSsrOwoJCQlpZighVHlwZS5lbnVtRXEoYVtpXSxiW2ldKSkgcmV0dXJuIGZhbHNlOwoJCX0KCQl2YXIgZSA9IGEuX19lbnVtX187CgkJaWYoZSAhPSBiLl9fZW51bV9fIHx8IGUgPT0gbnVsbCkgcmV0dXJuIGZhbHNlOwoJfSBjYXRjaCggZTEgKSB7CgkJcmV0dXJuIGZhbHNlOwoJfQoJcmV0dXJuIHRydWU7Cn07ClR5cGUuYWxsRW51bXMgPSBmdW5jdGlvbihlKSB7CglyZXR1cm4gZS5fX2VtcHR5X2NvbnN0cnVjdHNfXzsKfTsKCnZhciBWYWx1ZVR5cGUgPSAkaHhDbGFzc2VzWyJWYWx1ZVR5cGUiXSA9IHsgX19lbmFtZV9fIDogWyJWYWx1ZVR5cGUiXSwgX19jb25zdHJ1Y3RzX18gOiBbIlROdWxsIiwiVEludCIsIlRGbG9hdCIsIlRCb29sIiwiVE9iamVjdCIsIlRGdW5jdGlvbiIsIlRDbGFzcyIsIlRFbnVtIiwiVFVua25vd24iXSB9OwpWYWx1ZVR5cGUuVE51bGwgPSBbIlROdWxsIiwwXTsKVmFsdWVUeXBlLlROdWxsLnRvU3RyaW5nID0gJGVzdHI7ClZhbHVlVHlwZS5UTnVsbC5fX2VudW1fXyA9IFZhbHVlVHlwZTsKVmFsdWVUeXBlLlRJbnQgPSBbIlRJbnQiLDFdOwpWYWx1ZVR5cGUuVEludC50b1N0cmluZyA9ICRlc3RyOwpWYWx1ZVR5cGUuVEludC5fX2VudW1fXyA9IFZhbHVlVHlwZTsKVmFsdWVUeXBlLlRGbG9hdCA9IFsiVEZsb2F0IiwyXTsKVmFsdWVUeXBlLlRGbG9hdC50b1N0cmluZyA9ICRlc3RyOwpWYWx1ZVR5cGUuVEZsb2F0Ll9fZW51bV9fID0gVmFsdWVUeXBlOwpWYWx1ZVR5cGUuVEJvb2wgPSBbIlRCb29sIiwzXTsKVmFsdWVUeXBlLlRCb29sLnRvU3RyaW5nID0gJGVzdHI7ClZhbHVlVHlwZS5UQm9vbC5fX2VudW1fXyA9IFZhbHVlVHlwZTsKVmFsdWVUeXBlLlRPYmplY3QgPSBbIlRPYmplY3QiLDRdOwpWYWx1ZVR5cGUuVE9iamVjdC50b1N0cmluZyA9ICRlc3RyOwpWYWx1ZVR5cGUuVE9iamVjdC5fX2VudW1fXyA9IFZhbHVlVHlwZTsKVmFsdWVUeXBlLlRGdW5jdGlvbiA9IFsiVEZ1bmN0aW9uIiw1XTsKVmFsdWVUeXBlLlRGdW5jdGlvbi50b1N0cmluZyA9ICRlc3RyOwpWYWx1ZVR5cGUuVEZ1bmN0aW9uLl9fZW51bV9fID0gVmFsdWVUeXBlOwpWYWx1ZVR5cGUuVENsYXNzID0gZnVuY3Rpb24oYykgeyB2YXIgJHggPSBbIlRDbGFzcyIsNixjXTsgJHguX19lbnVtX18gPSBWYWx1ZVR5cGU7ICR4LnRvU3RyaW5nID0gJGVzdHI7IHJldHVybiAkeDsgfTsKVmFsdWVUeXBlLlRFbnVtID0gZnVuY3Rpb24oZSkgeyB2YXIgJHggPSBbIlRFbnVtIiw3LGVdOyAkeC5fX2VudW1fXyA9IFZhbHVlVHlwZTsgJHgudG9TdHJpbmcgPSAkZXN0cjsgcmV0dXJuICR4OyB9OwpWYWx1ZVR5cGUuVFVua25vd24gPSBbIlRVbmtub3duIiw4XTsKVmFsdWVUeXBlLlRVbmtub3duLnRvU3RyaW5nID0gJGVzdHI7ClZhbHVlVHlwZS5UVW5rbm93bi5fX2VudW1fXyA9IFZhbHVlVHlwZTsKVmFsdWVUeXBlLl9fZW1wdHlfY29uc3RydWN0c19fID0gW1ZhbHVlVHlwZS5UTnVsbCxWYWx1ZVR5cGUuVEludCxWYWx1ZVR5cGUuVEZsb2F0LFZhbHVlVHlwZS5UQm9vbCxWYWx1ZVR5cGUuVE9iamVjdCxWYWx1ZVR5cGUuVEZ1bmN0aW9uLFZhbHVlVHlwZS5UVW5rbm93bl07CgpoYXhlLlNlcmlhbGl6ZXIgPSBmdW5jdGlvbigpIHsKCXRoaXMuYnVmID0gbmV3IFN0cmluZ0J1ZigpOwoJdGhpcy5jYWNoZSA9IG5ldyBBcnJheSgpOwoJdGhpcy51c2VDYWNoZSA9IGhheGUuU2VyaWFsaXplci5VU0VfQ0FDSEU7Cgl0aGlzLnVzZUVudW1JbmRleCA9IGhheGUuU2VyaWFsaXplci5VU0VfRU5VTV9JTkRFWDsKCXRoaXMuc2hhc2ggPSBuZXcgaGF4ZS5kcy5TdHJpbmdNYXAoKTsKCXRoaXMuc2NvdW50ID0gMDsKfTsKJGh4Q2xhc3Nlc1siaGF4ZS5TZXJpYWxpemVyIl0gPSBoYXhlLlNlcmlhbGl6ZXI7CmhheGUuU2VyaWFsaXplci5fX25hbWVfXyA9IFsiaGF4ZSIsIlNlcmlhbGl6ZXIiXTsKaGF4ZS5TZXJpYWxpemVyLnJ1biA9IGZ1bmN0aW9uKHYpIHsKCXZhciBzID0gbmV3IGhheGUuU2VyaWFsaXplcigpOwoJcy5zZXJpYWxpemUodik7CglyZXR1cm4gcy50b1N0cmluZygpOwp9OwpoYXhlLlNlcmlhbGl6ZXIucHJvdG90eXBlID0gewoJdG9TdHJpbmc6IGZ1bmN0aW9uKCkgewoJCXJldHVybiB0aGlzLmJ1Zi5iOwoJfQoJLHNlcmlhbGl6ZVN0cmluZzogZnVuY3Rpb24ocykgewoJCXZhciB4ID0gdGhpcy5zaGFzaC5nZXQocyk7CgkJaWYoeCAhPSBudWxsKSB7CgkJCXRoaXMuYnVmLmIgKz0gIlIiOwoJCQlpZih4ID09IG51bGwpIHRoaXMuYnVmLmIgKz0gIm51bGwiOyBlbHNlIHRoaXMuYnVmLmIgKz0gIiIgKyB4OwoJCQlyZXR1cm47CgkJfQoJCXRoaXMuc2hhc2guc2V0KHMsdGhpcy5zY291bnQrKyk7CgkJdGhpcy5idWYuYiArPSAieSI7CgkJcyA9IGVuY29kZVVSSUNvbXBvbmVudChzKTsKCQlpZihzLmxlbmd0aCA9PSBudWxsKSB0aGlzLmJ1Zi5iICs9ICJudWxsIjsgZWxzZSB0aGlzLmJ1Zi5iICs9ICIiICsgcy5sZW5ndGg7CgkJdGhpcy5idWYuYiArPSAiOiI7CgkJaWYocyA9PSBudWxsKSB0aGlzLmJ1Zi5iICs9ICJudWxsIjsgZWxzZSB0aGlzLmJ1Zi5iICs9ICIiICsgczsKCX0KCSxzZXJpYWxpemVSZWY6IGZ1bmN0aW9uKHYpIHsKCQl2YXIgdnQgPSB0eXBlb2Yodik7CgkJdmFyIF9nMSA9IDA7CgkJdmFyIF9nID0gdGhpcy5jYWNoZS5sZW5ndGg7CgkJd2hpbGUoX2cxIDwgX2cpIHsKCQkJdmFyIGkgPSBfZzErKzsKCQkJdmFyIGNpID0gdGhpcy5jYWNoZVtpXTsKCQkJaWYodHlwZW9mKGNpKSA9PSB2dCAmJiBjaSA9PSB2KSB7CgkJCQl0aGlzLmJ1Zi5iICs9ICJyIjsKCQkJCWlmKGkgPT0gbnVsbCkgdGhpcy5idWYuYiArPSAibnVsbCI7IGVsc2UgdGhpcy5idWYuYiArPSAiIiArIGk7CgkJCQlyZXR1cm4gdHJ1ZTsKCQkJfQoJCX0KCQl0aGlzLmNhY2hlLnB1c2godik7CgkJcmV0dXJuIGZhbHNlOwoJfQoJLHNlcmlhbGl6ZUZpZWxkczogZnVuY3Rpb24odikgewoJCXZhciBfZyA9IDA7CgkJdmFyIF9nMSA9IFJlZmxlY3QuZmllbGRzKHYpOwoJCXdoaWxlKF9nIDwgX2cxLmxlbmd0aCkgewoJCQl2YXIgZiA9IF9nMVtfZ107CgkJCSsrX2c7CgkJCXRoaXMuc2VyaWFsaXplU3RyaW5nKGYpOwoJCQl0aGlzLnNlcmlhbGl6ZShSZWZsZWN0LmZpZWxkKHYsZikpOwoJCX0KCQl0aGlzLmJ1Zi5iICs9ICJnIjsKCX0KCSxzZXJpYWxpemU6IGZ1bmN0aW9uKHYpIHsKCQl7CgkJCXZhciBfZyA9IFR5cGVbInR5cGVvZiJdKHYpOwoJCQlzd2l0Y2goX2dbMV0pIHsKCQkJCWNhc2UgMDoKCQkJCQl0aGlzLmJ1Zi5iICs9ICJuIjsKCQkJCQlicmVhazsKCQkJCWNhc2UgMToKCQkJCQl2YXIgdjEgPSB2OwoJCQkJCWlmKHYxID09IDApIHsKCQkJCQkJdGhpcy5idWYuYiArPSAieiI7CgkJCQkJCXJldHVybjsKCQkJCQl9CgkJCQkJdGhpcy5idWYuYiArPSAiaSI7CgkJCQkJaWYodjEgPT0gbnVsbCkgdGhpcy5idWYuYiArPSAibnVsbCI7IGVsc2UgdGhpcy5idWYuYiArPSAiIiArIHYxOwoJCQkJCWJyZWFrOwoJCQkJY2FzZSAyOgoJCQkJCXZhciB2MiA9IHY7CgkJCQkJaWYoTWF0aC5pc05hTih2MikpIHRoaXMuYnVmLmIgKz0gImsiOyBlbHNlIGlmKCFNYXRoLmlzRmluaXRlKHYyKSkgaWYodjIgPCAwKSB0aGlzLmJ1Zi5iICs9ICJtIjsgZWxzZSB0aGlzLmJ1Zi5iICs9ICJwIjsgZWxzZSB7CgkJCQkJCXRoaXMuYnVmLmIgKz0gImQiOwoJCQkJCQlpZih2MiA9PSBudWxsKSB0aGlzLmJ1Zi5iICs9ICJudWxsIjsgZWxzZSB0aGlzLmJ1Zi5iICs9ICIiICsgdjI7CgkJCQkJfQoJCQkJCWJyZWFrOwoJCQkJY2FzZSAzOgoJCQkJCWlmKHYpIHRoaXMuYnVmLmIgKz0gInQiOyBlbHNlIHRoaXMuYnVmLmIgKz0gImYiOwoJCQkJCWJyZWFrOwoJCQkJY2FzZSA2OgoJCQkJCXZhciBjID0gX2dbMl07CgkJCQkJaWYoYyA9PSBTdHJpbmcpIHsKCQkJCQkJdGhpcy5zZXJpYWxpemVTdHJpbmcodik7CgkJCQkJCXJldHVybjsKCQkJCQl9CgkJCQkJaWYodGhpcy51c2VDYWNoZSAmJiB0aGlzLnNlcmlhbGl6ZVJlZih2KSkgcmV0dXJuOwoJCQkJCXN3aXRjaChjKSB7CgkJCQkJCWNhc2UgQXJyYXk6CgkJCQkJCQl2YXIgdWNvdW50ID0gMDsKCQkJCQkJCXRoaXMuYnVmLmIgKz0gImEiOwoJCQkJCQkJdmFyIGwgPSB2Lmxlbmd0aDsKCQkJCQkJCXZhciBfZzEgPSAwOwoJCQkJCQkJd2hpbGUoX2cxIDwgbCkgewoJCQkJCQkJCXZhciBpID0gX2cxKys7CgkJCQkJCQkJaWYodltpXSA9PSBudWxsKSB1Y291bnQrKzsgZWxzZSB7CgkJCQkJCQkJCWlmKHVjb3VudCA+IDApIHsKCQkJCQkJCQkJCWlmKHVjb3VudCA9PSAxKSB0aGlzLmJ1Zi5iICs9ICJuIjsgZWxzZSB7CgkJCQkJCQkJCQkJdGhpcy5idWYuYiArPSAidSI7CgkJCQkJCQkJCQkJaWYodWNvdW50ID09IG51bGwpIHRoaXMuYnVmLmIgKz0gIm51bGwiOyBlbHNlIHRoaXMuYnVmLmIgKz0gIiIgKyB1Y291bnQ7CgkJCQkJCQkJCQl9CgkJCQkJCQkJCQl1Y291bnQgPSAwOwoJCQkJCQkJCQl9CgkJCQkJCQkJCXRoaXMuc2VyaWFsaXplKHZbaV0pOwoJCQkJCQkJCX0KCQkJCQkJCX0KCQkJCQkJCWlmKHVjb3VudCA+IDApIHsKCQkJCQkJCQlpZih1Y291bnQgPT0gMSkgdGhpcy5idWYuYiArPSAibiI7IGVsc2UgewoJCQkJCQkJCQl0aGlzLmJ1Zi5iICs9ICJ1IjsKCQkJCQkJCQkJaWYodWNvdW50ID09IG51bGwpIHRoaXMuYnVmLmIgKz0gIm51bGwiOyBlbHNlIHRoaXMuYnVmLmIgKz0gIiIgKyB1Y291bnQ7CgkJCQkJCQkJfQoJCQkJCQkJfQoJCQkJCQkJdGhpcy5idWYuYiArPSAiaCI7CgkJCQkJCQlicmVhazsKCQkJCQkJY2FzZSBMaXN0OgoJCQkJCQkJdGhpcy5idWYuYiArPSAibCI7CgkJCQkJCQl2YXIgdjMgPSB2OwoJCQkJCQkJdmFyICRpdDAgPSB2My5pdGVyYXRvcigpOwoJCQkJCQkJd2hpbGUoICRpdDAuaGFzTmV4dCgpICkgewoJCQkJCQkJCXZhciBpMSA9ICRpdDAubmV4dCgpOwoJCQkJCQkJCXRoaXMuc2VyaWFsaXplKGkxKTsKCQkJCQkJCX0KCQkJCQkJCXRoaXMuYnVmLmIgKz0gImgiOwoJCQkJCQkJYnJlYWs7CgkJCQkJCWNhc2UgRGF0ZToKCQkJCQkJCXZhciBkID0gdjsKCQkJCQkJCXRoaXMuYnVmLmIgKz0gInYiOwoJCQkJCQkJdGhpcy5idWYuYWRkKEh4T3ZlcnJpZGVzLmRhdGVTdHIoZCkpOwoJCQkJCQkJYnJlYWs7CgkJCQkJCWNhc2UgaGF4ZS5kcy5TdHJpbmdNYXA6CgkJCQkJCQl0aGlzLmJ1Zi5iICs9ICJiIjsKCQkJCQkJCXZhciB2NCA9IHY7CgkJCQkJCQl2YXIgJGl0MSA9IHY0LmtleXMoKTsKCQkJCQkJCXdoaWxlKCAkaXQxLmhhc05leHQoKSApIHsKCQkJCQkJCQl2YXIgayA9ICRpdDEubmV4dCgpOwoJCQkJCQkJCXRoaXMuc2VyaWFsaXplU3RyaW5nKGspOwoJCQkJCQkJCXRoaXMuc2VyaWFsaXplKHY0LmdldChrKSk7CgkJCQkJCQl9CgkJCQkJCQl0aGlzLmJ1Zi5iICs9ICJoIjsKCQkJCQkJCWJyZWFrOwoJCQkJCQljYXNlIGhheGUuZHMuSW50TWFwOgoJCQkJCQkJdGhpcy5idWYuYiArPSAicSI7CgkJCQkJCQl2YXIgdjUgPSB2OwoJCQkJCQkJdmFyICRpdDIgPSB2NS5rZXlzKCk7CgkJCQkJCQl3aGlsZSggJGl0Mi5oYXNOZXh0KCkgKSB7CgkJCQkJCQkJdmFyIGsxID0gJGl0Mi5uZXh0KCk7CgkJCQkJCQkJdGhpcy5idWYuYiArPSAiOiI7CgkJCQkJCQkJaWYoazEgPT0gbnVsbCkgdGhpcy5idWYuYiArPSAibnVsbCI7IGVsc2UgdGhpcy5idWYuYiArPSAiIiArIGsxOwoJCQkJCQkJCXRoaXMuc2VyaWFsaXplKHY1LmdldChrMSkpOwoJCQkJCQkJfQoJCQkJCQkJdGhpcy5idWYuYiArPSAiaCI7CgkJCQkJCQlicmVhazsKCQkJCQkJY2FzZSBoYXhlLmRzLk9iamVjdE1hcDoKCQkJCQkJCXRoaXMuYnVmLmIgKz0gIk0iOwoJCQkJCQkJdmFyIHY2ID0gdjsKCQkJCQkJCXZhciAkaXQzID0gdjYua2V5cygpOwoJCQkJCQkJd2hpbGUoICRpdDMuaGFzTmV4dCgpICkgewoJCQkJCQkJCXZhciBrMiA9ICRpdDMubmV4dCgpOwoJCQkJCQkJCXZhciBpZCA9IFJlZmxlY3QuZmllbGQoazIsIl9faWRfXyIpOwoJCQkJCQkJCVJlZmxlY3QuZGVsZXRlRmllbGQoazIsIl9faWRfXyIpOwoJCQkJCQkJCXRoaXMuc2VyaWFsaXplKGsyKTsKCQkJCQkJCQlrMi5fX2lkX18gPSBpZDsKCQkJCQkJCQl0aGlzLnNlcmlhbGl6ZSh2Ni5oW2syLl9faWRfX10pOwoJCQkJCQkJfQoJCQkJCQkJdGhpcy5idWYuYiArPSAiaCI7CgkJCQkJCQlicmVhazsKCQkJCQkJY2FzZSBoYXhlLmlvLkJ5dGVzOgoJCQkJCQkJdmFyIHY3ID0gdjsKCQkJCQkJCXZhciBpMiA9IDA7CgkJCQkJCQl2YXIgbWF4ID0gdjcubGVuZ3RoIC0gMjsKCQkJCQkJCXZhciBjaGFyc0J1ZiA9IG5ldyBTdHJpbmdCdWYoKTsKCQkJCQkJCXZhciBiNjQgPSBoYXhlLlNlcmlhbGl6ZXIuQkFTRTY0OwoJCQkJCQkJd2hpbGUoaTIgPCBtYXgpIHsKCQkJCQkJCQl2YXIgYjEgPSB2Ny5nZXQoaTIrKyk7CgkJCQkJCQkJdmFyIGIyID0gdjcuZ2V0KGkyKyspOwoJCQkJCQkJCXZhciBiMyA9IHY3LmdldChpMisrKTsKCQkJCQkJCQljaGFyc0J1Zi5hZGQoYjY0LmNoYXJBdChiMSA+PiAyKSk7CgkJCQkJCQkJY2hhcnNCdWYuYWRkKGI2NC5jaGFyQXQoKGIxIDw8IDQgfCBiMiA+PiA0KSAmIDYzKSk7CgkJCQkJCQkJY2hhcnNCdWYuYWRkKGI2NC5jaGFyQXQoKGIyIDw8IDIgfCBiMyA+PiA2KSAmIDYzKSk7CgkJCQkJCQkJY2hhcnNCdWYuYWRkKGI2NC5jaGFyQXQoYjMgJiA2MykpOwoJCQkJCQkJfQoJCQkJCQkJaWYoaTIgPT0gbWF4KSB7CgkJCQkJCQkJdmFyIGIxMSA9IHY3LmdldChpMisrKTsKCQkJCQkJCQl2YXIgYjIxID0gdjcuZ2V0KGkyKyspOwoJCQkJCQkJCWNoYXJzQnVmLmFkZChiNjQuY2hhckF0KGIxMSA+PiAyKSk7CgkJCQkJCQkJY2hhcnNCdWYuYWRkKGI2NC5jaGFyQXQoKGIxMSA8PCA0IHwgYjIxID4+IDQpICYgNjMpKTsKCQkJCQkJCQljaGFyc0J1Zi5hZGQoYjY0LmNoYXJBdChiMjEgPDwgMiAmIDYzKSk7CgkJCQkJCQl9IGVsc2UgaWYoaTIgPT0gbWF4ICsgMSkgewoJCQkJCQkJCXZhciBiMTIgPSB2Ny5nZXQoaTIrKyk7CgkJCQkJCQkJY2hhcnNCdWYuYWRkKGI2NC5jaGFyQXQoYjEyID4+IDIpKTsKCQkJCQkJCQljaGFyc0J1Zi5hZGQoYjY0LmNoYXJBdChiMTIgPDwgNCAmIDYzKSk7CgkJCQkJCQl9CgkJCQkJCQl2YXIgY2hhcnMgPSBjaGFyc0J1Zi5iOwoJCQkJCQkJdGhpcy5idWYuYiArPSAicyI7CgkJCQkJCQlpZihjaGFycy5sZW5ndGggPT0gbnVsbCkgdGhpcy5idWYuYiArPSAibnVsbCI7IGVsc2UgdGhpcy5idWYuYiArPSAiIiArIGNoYXJzLmxlbmd0aDsKCQkJCQkJCXRoaXMuYnVmLmIgKz0gIjoiOwoJCQkJCQkJaWYoY2hhcnMgPT0gbnVsbCkgdGhpcy5idWYuYiArPSAibnVsbCI7IGVsc2UgdGhpcy5idWYuYiArPSAiIiArIGNoYXJzOwoJCQkJCQkJYnJlYWs7CgkJCQkJCWRlZmF1bHQ6CgkJCQkJCQlpZih0aGlzLnVzZUNhY2hlKSB0aGlzLmNhY2hlLnBvcCgpOwoJCQkJCQkJaWYodi5oeFNlcmlhbGl6ZSAhPSBudWxsKSB7CgkJCQkJCQkJdGhpcy5idWYuYiArPSAiQyI7CgkJCQkJCQkJdGhpcy5zZXJpYWxpemVTdHJpbmcoVHlwZS5nZXRDbGFzc05hbWUoYykpOwoJCQkJCQkJCWlmKHRoaXMudXNlQ2FjaGUpIHRoaXMuY2FjaGUucHVzaCh2KTsKCQkJCQkJCQl2Lmh4U2VyaWFsaXplKHRoaXMpOwoJCQkJCQkJCXRoaXMuYnVmLmIgKz0gImciOwoJCQkJCQkJfSBlbHNlIHsKCQkJCQkJCQl0aGlzLmJ1Zi5iICs9ICJjIjsKCQkJCQkJCQl0aGlzLnNlcmlhbGl6ZVN0cmluZyhUeXBlLmdldENsYXNzTmFtZShjKSk7CgkJCQkJCQkJaWYodGhpcy51c2VDYWNoZSkgdGhpcy5jYWNoZS5wdXNoKHYpOwoJCQkJCQkJCXRoaXMuc2VyaWFsaXplRmllbGRzKHYpOwoJCQkJCQkJfQoJCQkJCX0KCQkJCQlicmVhazsKCQkJCWNhc2UgNDoKCQkJCQlpZih0aGlzLnVzZUNhY2hlICYmIHRoaXMuc2VyaWFsaXplUmVmKHYpKSByZXR1cm47CgkJCQkJdGhpcy5idWYuYiArPSAibyI7CgkJCQkJdGhpcy5zZXJpYWxpemVGaWVsZHModik7CgkJCQkJYnJlYWs7CgkJCQljYXNlIDc6CgkJCQkJdmFyIGUgPSBfZ1syXTsKCQkJCQlpZih0aGlzLnVzZUNhY2hlKSB7CgkJCQkJCWlmKHRoaXMuc2VyaWFsaXplUmVmKHYpKSByZXR1cm47CgkJCQkJCXRoaXMuY2FjaGUucG9wKCk7CgkJCQkJfQoJCQkJCWlmKHRoaXMudXNlRW51bUluZGV4KSB0aGlzLmJ1Zi5iICs9ICJqIjsgZWxzZSB0aGlzLmJ1Zi5iICs9ICJ3IjsKCQkJCQl0aGlzLnNlcmlhbGl6ZVN0cmluZyhUeXBlLmdldEVudW1OYW1lKGUpKTsKCQkJCQlpZih0aGlzLnVzZUVudW1JbmRleCkgewoJCQkJCQl0aGlzLmJ1Zi5iICs9ICI6IjsKCQkJCQkJdGhpcy5idWYuYiArPSBTdGQuc3RyaW5nKHZbMV0pOwoJCQkJCX0gZWxzZSB0aGlzLnNlcmlhbGl6ZVN0cmluZyh2WzBdKTsKCQkJCQl0aGlzLmJ1Zi5iICs9ICI6IjsKCQkJCQl2YXIgbDEgPSB2Lmxlbmd0aDsKCQkJCQl0aGlzLmJ1Zi5iICs9IFN0ZC5zdHJpbmcobDEgLSAyKTsKCQkJCQl2YXIgX2cxMSA9IDI7CgkJCQkJd2hpbGUoX2cxMSA8IGwxKSB7CgkJCQkJCXZhciBpMyA9IF9nMTErKzsKCQkJCQkJdGhpcy5zZXJpYWxpemUodltpM10pOwoJCQkJCX0KCQkJCQlpZih0aGlzLnVzZUNhY2hlKSB0aGlzLmNhY2hlLnB1c2godik7CgkJCQkJYnJlYWs7CgkJCQljYXNlIDU6CgkJCQkJdGhyb3cgIkNhbm5vdCBzZXJpYWxpemUgZnVuY3Rpb24iOwoJCQkJCWJyZWFrOwoJCQkJZGVmYXVsdDoKCQkJCQl0aHJvdyAiQ2Fubm90IHNlcmlhbGl6ZSAiICsgU3RkLnN0cmluZyh2KTsKCQkJfQoJCX0KCX0KCSxzZXJpYWxpemVFeGNlcHRpb246IGZ1bmN0aW9uKGUpIHsKCQl0aGlzLmJ1Zi5iICs9ICJ4IjsKCQl0aGlzLnNlcmlhbGl6ZShlKTsKCX0KCSxfX2NsYXNzX186IGhheGUuU2VyaWFsaXplcgp9OwoKCk1hdGguX19uYW1lX18gPSBbIk1hdGgiXTsKCgp2YXIgTGlzdCA9IGZ1bmN0aW9uKCkgewoJdGhpcy5sZW5ndGggPSAwOwp9OwokaHhDbGFzc2VzWyJMaXN0Il0gPSBMaXN0OwpMaXN0Ll9fbmFtZV9fID0gWyJMaXN0Il07Ckxpc3QucHJvdG90eXBlID0gewoJYWRkOiBmdW5jdGlvbihpdGVtKSB7CgkJdmFyIHggPSBbaXRlbV07CgkJaWYodGhpcy5oID09IG51bGwpIHRoaXMuaCA9IHg7IGVsc2UgdGhpcy5xWzFdID0geDsKCQl0aGlzLnEgPSB4OwoJCXRoaXMubGVuZ3RoKys7Cgl9CgkscHVzaDogZnVuY3Rpb24oaXRlbSkgewoJCXZhciB4ID0gW2l0ZW0sdGhpcy5oXTsKCQl0aGlzLmggPSB4OwoJCWlmKHRoaXMucSA9PSBudWxsKSB0aGlzLnEgPSB4OwoJCXRoaXMubGVuZ3RoKys7Cgl9CgksZmlyc3Q6IGZ1bmN0aW9uKCkgewoJCWlmKHRoaXMuaCA9PSBudWxsKSByZXR1cm4gbnVsbDsgZWxzZSByZXR1cm4gdGhpcy5oWzBdOwoJfQoJLGxhc3Q6IGZ1bmN0aW9uKCkgewoJCWlmKHRoaXMucSA9PSBudWxsKSByZXR1cm4gbnVsbDsgZWxzZSByZXR1cm4gdGhpcy5xWzBdOwoJfQoJLHBvcDogZnVuY3Rpb24oKSB7CgkJaWYodGhpcy5oID09IG51bGwpIHJldHVybiBudWxsOwoJCXZhciB4ID0gdGhpcy5oWzBdOwoJCXRoaXMuaCA9IHRoaXMuaFsxXTsKCQlpZih0aGlzLmggPT0gbnVsbCkgdGhpcy5xID0gbnVsbDsKCQl0aGlzLmxlbmd0aC0tOwoJCXJldHVybiB4OwoJfQoJLGlzRW1wdHk6IGZ1bmN0aW9uKCkgewoJCXJldHVybiB0aGlzLmggPT0gbnVsbDsKCX0KCSxjbGVhcjogZnVuY3Rpb24oKSB7CgkJdGhpcy5oID0gbnVsbDsKCQl0aGlzLnEgPSBudWxsOwoJCXRoaXMubGVuZ3RoID0gMDsKCX0KCSxyZW1vdmU6IGZ1bmN0aW9uKHYpIHsKCQl2YXIgcHJldiA9IG51bGw7CgkJdmFyIGwgPSB0aGlzLmg7CgkJd2hpbGUobCAhPSBudWxsKSB7CgkJCWlmKGxbMF0gPT0gdikgewoJCQkJaWYocHJldiA9PSBudWxsKSB0aGlzLmggPSBsWzFdOyBlbHNlIHByZXZbMV0gPSBsWzFdOwoJCQkJaWYodGhpcy5xID09IGwpIHRoaXMucSA9IHByZXY7CgkJCQl0aGlzLmxlbmd0aC0tOwoJCQkJcmV0dXJuIHRydWU7CgkJCX0KCQkJcHJldiA9IGw7CgkJCWwgPSBsWzFdOwoJCX0KCQlyZXR1cm4gZmFsc2U7Cgl9CgksaXRlcmF0b3I6IGZ1bmN0aW9uKCkgewoJCXJldHVybiB7IGggOiB0aGlzLmgsIGhhc05leHQgOiBmdW5jdGlvbigpIHsKCQkJcmV0dXJuIHRoaXMuaCAhPSBudWxsOwoJCX0sIG5leHQgOiBmdW5jdGlvbigpIHsKCQkJaWYodGhpcy5oID09IG51bGwpIHJldHVybiBudWxsOwoJCQl2YXIgeCA9IHRoaXMuaFswXTsKCQkJdGhpcy5oID0gdGhpcy5oWzFdOwoJCQlyZXR1cm4geDsKCQl9fTsKCX0KCSxqb2luOiBmdW5jdGlvbihzZXApIHsKCQl2YXIgcyA9IG5ldyBTdHJpbmdCdWYoKTsKCQl2YXIgZmlyc3QgPSB0cnVlOwoJCXZhciBsID0gdGhpcy5oOwoJCXdoaWxlKGwgIT0gbnVsbCkgewoJCQlpZihmaXJzdCkgZmlyc3QgPSBmYWxzZTsgZWxzZSBzLmIgKz0gU3RkLnN0cmluZyhzZXApOwoJCQlzLmIgKz0gU3RkLnN0cmluZyhsWzBdKTsKCQkJbCA9IGxbMV07CgkJfQoJCXJldHVybiBzLmI7Cgl9CgksZmlsdGVyOiBmdW5jdGlvbihmKSB7CgkJdmFyIGwyID0gbmV3IExpc3QoKTsKCQl2YXIgbCA9IHRoaXMuaDsKCQl3aGlsZShsICE9IG51bGwpIHsKCQkJdmFyIHYgPSBsWzBdOwoJCQlsID0gbFsxXTsKCQkJaWYoZih2KSkgbDIuYWRkKHYpOwoJCX0KCQlyZXR1cm4gbDI7Cgl9CgksbWFwOiBmdW5jdGlvbihmKSB7CgkJdmFyIGIgPSBuZXcgTGlzdCgpOwoJCXZhciBsID0gdGhpcy5oOwoJCXdoaWxlKGwgIT0gbnVsbCkgewoJCQl2YXIgdiA9IGxbMF07CgkJCWwgPSBsWzFdOwoJCQliLmFkZChmKHYpKTsKCQl9CgkJcmV0dXJuIGI7Cgl9CgksX19jbGFzc19fOiBMaXN0Cn0KCgoKdmFyIFN0cmluZ1Rvb2xzID0gZnVuY3Rpb24oKSB7IH0KJGh4Q2xhc3Nlc1siU3RyaW5nVG9vbHMiXSA9IFN0cmluZ1Rvb2xzOwpTdHJpbmdUb29scy5fX25hbWVfXyA9IFsiU3RyaW5nVG9vbHMiXTsKU3RyaW5nVG9vbHMudXJsRW5jb2RlID0gZnVuY3Rpb24ocykgewoJcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChzKTsKfQpTdHJpbmdUb29scy51cmxEZWNvZGUgPSBmdW5jdGlvbihzKSB7CglyZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KHMuc3BsaXQoIisiKS5qb2luKCIgIikpOwp9ClN0cmluZ1Rvb2xzLmh0bWxFc2NhcGUgPSBmdW5jdGlvbihzLHF1b3RlcykgewoJcyA9IHMuc3BsaXQoIiYiKS5qb2luKCImYW1wOyIpLnNwbGl0KCI8Iikuam9pbigiJmx0OyIpLnNwbGl0KCI+Iikuam9pbigiJmd0OyIpOwoJaWYocXVvdGVzKSByZXR1cm4gcy5zcGxpdCgiXCIiKS5qb2luKCImcXVvdDsiKS5zcGxpdCgiJyIpLmpvaW4oIiYjMDM5OyIpOyBlbHNlIHJldHVybiBzOwp9ClN0cmluZ1Rvb2xzLmh0bWxVbmVzY2FwZSA9IGZ1bmN0aW9uKHMpIHsKCXJldHVybiBzLnNwbGl0KCImZ3Q7Iikuam9pbigiPiIpLnNwbGl0KCImbHQ7Iikuam9pbigiPCIpLnNwbGl0KCImcXVvdDsiKS5qb2luKCJcIiIpLnNwbGl0KCImIzAzOTsiKS5qb2luKCInIikuc3BsaXQoIiZhbXA7Iikuam9pbigiJiIpOwp9ClN0cmluZ1Rvb2xzLnN0YXJ0c1dpdGggPSBmdW5jdGlvbihzLHN0YXJ0KSB7CglyZXR1cm4gcy5sZW5ndGggPj0gc3RhcnQubGVuZ3RoICYmIEh4T3ZlcnJpZGVzLnN1YnN0cihzLDAsc3RhcnQubGVuZ3RoKSA9PSBzdGFydDsKfQpTdHJpbmdUb29scy5pc1NwYWNlID0gZnVuY3Rpb24ocyxwb3MpIHsKCXZhciBjID0gSHhPdmVycmlkZXMuY2NhKHMscG9zKTsKCXJldHVybiBjID4gOCAmJiBjIDwgMTQgfHwgYyA9PSAzMjsKfQpTdHJpbmdUb29scy5sdHJpbSA9IGZ1bmN0aW9uKHMpIHsKCXZhciBsID0gcy5sZW5ndGg7Cgl2YXIgciA9IDA7Cgl3aGlsZShyIDwgbCAmJiBTdHJpbmdUb29scy5pc1NwYWNlKHMscikpIHIrKzsKCWlmKHIgPiAwKSByZXR1cm4gSHhPdmVycmlkZXMuc3Vic3RyKHMscixsIC0gcik7IGVsc2UgcmV0dXJuIHM7Cn0KU3RyaW5nVG9vbHMucmVwbGFjZSA9IGZ1bmN0aW9uKHMsc3ViLGJ5KSB7CglyZXR1cm4gcy5zcGxpdChzdWIpLmpvaW4oYnkpOwp9ClN0cmluZ1Rvb2xzLmhleCA9IGZ1bmN0aW9uKG4sZGlnaXRzKSB7Cgl2YXIgcyA9ICIiOwoJdmFyIGhleENoYXJzID0gIjAxMjM0NTY3ODlBQkNERUYiOwoJZG8gewoJCXMgPSBoZXhDaGFycy5jaGFyQXQobiAmIDE1KSArIHM7CgkJbiA+Pj49IDQ7Cgl9IHdoaWxlKG4gPiAwKTsKCWlmKGRpZ2l0cyAhPSBudWxsKSB3aGlsZShzLmxlbmd0aCA8IGRpZ2l0cykgcyA9ICIwIiArIHM7CglyZXR1cm4gczsKfQp2YXIgSHhPdmVycmlkZXMgPSBmdW5jdGlvbigpIHsgfQokaHhDbGFzc2VzWyJIeE92ZXJyaWRlcyJdID0gSHhPdmVycmlkZXM7Ckh4T3ZlcnJpZGVzLl9fbmFtZV9fID0gWyJIeE92ZXJyaWRlcyJdOwpIeE92ZXJyaWRlcy5kYXRlU3RyID0gZnVuY3Rpb24oZGF0ZSkgewoJdmFyIG0gPSBkYXRlLmdldE1vbnRoKCkgKyAxOwoJdmFyIGQgPSBkYXRlLmdldERhdGUoKTsKCXZhciBoID0gZGF0ZS5nZXRIb3VycygpOwoJdmFyIG1pID0gZGF0ZS5nZXRNaW51dGVzKCk7Cgl2YXIgcyA9IGRhdGUuZ2V0U2Vjb25kcygpOwoJcmV0dXJuIGRhdGUuZ2V0RnVsbFllYXIoKSArICItIiArIChtIDwgMTA/IjAiICsgbToiIiArIG0pICsgIi0iICsgKGQgPCAxMD8iMCIgKyBkOiIiICsgZCkgKyAiICIgKyAoaCA8IDEwPyIwIiArIGg6IiIgKyBoKSArICI6IiArIChtaSA8IDEwPyIwIiArIG1pOiIiICsgbWkpICsgIjoiICsgKHMgPCAxMD8iMCIgKyBzOiIiICsgcyk7Cn0KSHhPdmVycmlkZXMuc3RyRGF0ZSA9IGZ1bmN0aW9uKHMpIHsKCXZhciBfZyA9IHMubGVuZ3RoOwoJc3dpdGNoKF9nKSB7CgljYXNlIDg6CgkJdmFyIGsgPSBzLnNwbGl0KCI6Iik7CgkJdmFyIGQgPSBuZXcgRGF0ZSgpOwoJCWQuc2V0VGltZSgwKTsKCQlkLnNldFVUQ0hvdXJzKGtbMF0pOwoJCWQuc2V0VVRDTWludXRlcyhrWzFdKTsKCQlkLnNldFVUQ1NlY29uZHMoa1syXSk7CgkJcmV0dXJuIGQ7CgljYXNlIDEwOgoJCXZhciBrID0gcy5zcGxpdCgiLSIpOwoJCXJldHVybiBuZXcgRGF0ZShrWzBdLGtbMV0gLSAxLGtbMl0sMCwwLDApOwoJY2FzZSAxOToKCQl2YXIgayA9IHMuc3BsaXQoIiAiKTsKCQl2YXIgeSA9IGtbMF0uc3BsaXQoIi0iKTsKCQl2YXIgdCA9IGtbMV0uc3BsaXQoIjoiKTsKCQlyZXR1cm4gbmV3IERhdGUoeVswXSx5WzFdIC0gMSx5WzJdLHRbMF0sdFsxXSx0WzJdKTsKCWRlZmF1bHQ6CgkJdGhyb3cgIkludmFsaWQgZGF0ZSBmb3JtYXQgOiAiICsgczsKCX0KfQpIeE92ZXJyaWRlcy5jY2EgPSBmdW5jdGlvbihzLGluZGV4KSB7Cgl2YXIgeCA9IHMuY2hhckNvZGVBdChpbmRleCk7CglpZih4ICE9IHgpIHJldHVybiB1bmRlZmluZWQ7CglyZXR1cm4geDsKfQpIeE92ZXJyaWRlcy5zdWJzdHIgPSBmdW5jdGlvbihzLHBvcyxsZW4pIHsKCWlmKHBvcyAhPSBudWxsICYmIHBvcyAhPSAwICYmIGxlbiAhPSBudWxsICYmIGxlbiA8IDApIHJldHVybiAiIjsKCWlmKGxlbiA9PSBudWxsKSBsZW4gPSBzLmxlbmd0aDsKCWlmKHBvcyA8IDApIHsKCQlwb3MgPSBzLmxlbmd0aCArIHBvczsKCQlpZihwb3MgPCAwKSBwb3MgPSAwOwoJfSBlbHNlIGlmKGxlbiA8IDApIGxlbiA9IHMubGVuZ3RoICsgbGVuIC0gcG9zOwoJcmV0dXJuIHMuc3Vic3RyKHBvcyxsZW4pOwp9Ckh4T3ZlcnJpZGVzLnJlbW92ZSA9IGZ1bmN0aW9uKGEsb2JqKSB7Cgl2YXIgaSA9IDA7Cgl2YXIgbCA9IGEubGVuZ3RoOwoJd2hpbGUoaSA8IGwpIHsKCQlpZihhW2ldID09IG9iaikgewoJCQlhLnNwbGljZShpLDEpOwoJCQlyZXR1cm4gdHJ1ZTsKCQl9CgkJaSsrOwoJfQoJcmV0dXJuIGZhbHNlOwp9Ckh4T3ZlcnJpZGVzLml0ZXIgPSBmdW5jdGlvbihhKSB7CglyZXR1cm4geyBjdXIgOiAwLCBhcnIgOiBhLCBoYXNOZXh0IDogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIHRoaXMuY3VyIDwgdGhpcy5hcnIubGVuZ3RoOwoJfSwgbmV4dCA6IGZ1bmN0aW9uKCkgewoJCXJldHVybiB0aGlzLmFyclt0aGlzLmN1cisrXTsKCX19Owp9Cgp2YXIgSnFFeCA9IGZ1bmN0aW9uKCkgeyB9CiRoeENsYXNzZXNbIkpxRXgiXSA9IEpxRXg7CkpxRXguX19uYW1lX18gPSBbIkpxRXgiXTsKSnFFeC5ibGluayA9IGZ1bmN0aW9uKGoscGVyaW9kLHN0YXJ0LGZpbmlzaCkgewoJaWYoZmluaXNoID09IG51bGwpIGZpbmlzaCA9IC0xOwoJaWYoc3RhcnQgPT0gbnVsbCkgc3RhcnQgPSAwOwoJaWYocGVyaW9kID09IG51bGwpIHBlcmlvZCA9IDIwMDsKCXZhciBjYmsgPSBudWxsOwoJY2JrID0gZnVuY3Rpb24oKSB7CgkJaWYoc3RhcnQgIT0gZmluaXNoKSB7CgkJCXN0YXJ0ID0gc3RhcnQgKyAxOwoJCQlKcUV4LmJsaW5rKGoscGVyaW9kLHN0YXJ0LGZpbmlzaCk7CgkJfQoJfTsKCWouZmFkZU91dChwZXJpb2QpLmZhZGVJbihwZXJpb2QsY2JrKTsKCXJldHVybiBqOwp9CkpxRXguaiA9IGZ1bmN0aW9uKHNlbCkgewoJcmV0dXJuIG5ldyBqcy5KUXVlcnkoc2VsKTsKfQpKcUV4Lm9rID0gZnVuY3Rpb24oaikgewoJcmV0dXJuIGo7Cn0KSnFFeC5zb2Z0SGlkZSA9IGZ1bmN0aW9uKGopIHsKCWouY3NzKCJ2aXNpYmlsaXR5IiwiaGlkZGVuIik7CglqLmF0dHIoIm9sZEhlaWdodCIsai5jc3MoImhlaWdodCIpKTsKCXJldHVybiBqOwp9CkpxRXgudmlzID0gZnVuY3Rpb24oaixvbk9mZikgewoJaWYob25PZmYpIGouY3NzKCJ2aXNpYmlsaXR5IiwidmlzaWJsZSIpOyBlbHNlIGouY3NzKCJ2aXNpYmlsaXR5IiwiaGlkZGVuIik7CglyZXR1cm4gajsKfQpKcUV4LnNvZnRTaG93ID0gZnVuY3Rpb24oaikgewoJai5jc3MoInZpc2liaWxpdHkiLCJ2aXNpYmxlIik7CglqLmNzcygiaGVpZ2h0IixqLmF0dHIoIm9sZEhlaWdodCIpKTsKCWoucmVtb3ZlQXR0cigib2xkSGVpZ2h0Iik7Cn0KSnFFeC5sb2FkaW5nID0gZnVuY3Rpb24oanEpIHsKCWpxLnByZXBlbmQoIjxpbWcgY2xhc3M9J2NkTG9hZGluZycgc3JjPScvaW1nL2ljb25zL3VpL2xvYWRpbmcxLmdpZicgYWx0PSdsb2FkaW5nLi4uJyAvPiIpOwp9CkpxRXgucG9zdExvYWRpbmcgPSBmdW5jdGlvbihqcSkgewoJanEuYXBwZW5kKCI8aW1nIGNsYXNzPSdjZExvYWRpbmcnIHNyYz0nL2ltZy9pY29ucy91aS9sb2FkaW5nMS5naWYnIGFsdD0nbG9hZGluZy4uLicgLz4iKTsKCXJldHVybiBqcTsKfQpKcUV4LnJlbUxvYWRpbmcgPSBmdW5jdGlvbihqcSkgewoJanEuZmluZCgiLmNkTG9hZGluZyIpLnJlbW92ZSgpOwoJcmV0dXJuIGpxOwp9CkpxRXgud2FycCA9IGZ1bmN0aW9uKGpxLHgseSkgewoJdmFyIGx2YWwgPSBqcS5jc3MoImxlZnQiKS5zcGxpdCgicHgiKVswXTsKCWpxLmNzcygibGVmdCIsU3RkLnBhcnNlSW50KGx2YWwpICsgeCArICJweCIpOwoJaWYoeSAhPSBudWxsKSB7CgkJdmFyIHR2YWwgPSBqcS5jc3MoInRvcCIpLnNwbGl0KCJweCIpWzBdOwoJCWpxLmNzcygidG9wIixTdGQucGFyc2VJbnQodHZhbCkgKyB5ICsgInB4Iik7Cgl9CglyZXR1cm4ganE7Cn0KSnFFeC5tb3ZlID0gZnVuY3Rpb24oanEseCx5LGR1cikgewoJaWYoZHVyID09IG51bGwpIGR1ciA9IDIwMDsKCXZhciBsdmFsID0ganEuY3NzKCJsZWZ0Iikuc3BsaXQoInB4IilbMF07CglqcS5hbmltYXRlKHsgbGVmdCA6IFN0ZC5wYXJzZUludChsdmFsKSArIHggKyAicHgifSxkdXIpOwoJaWYoeSAhPSBudWxsKSB7CgkJdmFyIHR2YWwgPSBqcS5jc3MoInRvcCIpLnNwbGl0KCJweCIpWzBdOwoJCWpxLmFuaW1hdGUoeyB0b3AgOiBTdGQucGFyc2VJbnQodHZhbCkgKyB5ICsgInB4In0sZHVyKTsKCX0KCXJldHVybiBqcTsKfQpKcUV4LmNvdW50VG8gPSBmdW5jdGlvbihqcSxpLGRlbGF5X21zKSB7CglpZihkZWxheV9tcyA9PSBudWxsKSBkZWxheV9tcyA9IDIwOwoJdmFyIHN0YXJ0ID0gU3RkLnBhcnNlSW50KGpxLnRleHQoKSk7CglpZihzdGFydCA9PSBudWxsKSBzdGFydCA9IDA7CglpZihzdGFydCA8PSBpICsgMSkgewoJCXZhciBzdGVwcyA9IGkgKyAxIC0gc3RhcnQ7CgkJdmFyIF9nID0gMDsKCQl3aGlsZShfZyA8IHN0ZXBzKSB7CgkJCXZhciBqID0gW19nKytdOwoJCQloYXhlLlRpbWVyLmRlbGF5KChmdW5jdGlvbihqKSB7CgkJCQlyZXR1cm4gZnVuY3Rpb24oKSB7CgkJCQkJanEudGV4dChTdGQuc3RyaW5nKHN0YXJ0ICsgalswXSkpOwoJCQkJfTsKCQkJfSkoaiksZGVsYXlfbXMgKiBqWzBdKTsKCQl9Cgl9IGVsc2UgewoJCXZhciBzdGVwcyA9IHN0YXJ0IC0gaSArIDE7CgkJdmFyIF9nID0gMDsKCQl3aGlsZShfZyA8IHN0ZXBzKSB7CgkJCXZhciBqMSA9IFtfZysrXTsKCQkJaGF4ZS5UaW1lci5kZWxheSgoZnVuY3Rpb24oajEpIHsKCQkJCXJldHVybiBmdW5jdGlvbigpIHsKCQkJCQlqcS50ZXh0KFN0ZC5zdHJpbmcoc3RhcnQgLSBqMVswXSkpOwoJCQkJfTsKCQkJfSkoajEpLGRlbGF5X21zICogajFbMF0pOwoJCX0KCX0KCXJldHVybiBqcTsKfQpKcUV4LnRpcCA9IGZ1bmN0aW9uKGpxLHQsYikgewoJanEuaG92ZXIoZnVuY3Rpb24oZSkgewoJCW10LmpzLlRpcC5zaG93VGlwKGpxLnRvQXJyYXkoKVswXSwiIiwiPGRpdiBjbGFzcz0ndGlwdG9wJyA+IiArICI8ZGl2IGNsYXNzPSd0aXBib3R0b20nPiIgKyAiPGRpdiBjbGFzcz0ndGlwYmcnPiIgKyAiPGRpdiBjbGFzcz0ndGlwY29udGVudCc+IiArICI8aDE+IiArIHQgKyAiPC9oMT4iICsgYiArICI8L2Rpdj4iICsgIjwvZGl2PiIgKyAiPC9kaXY+IiArICI8L2Rpdj4iKTsKCX0sZnVuY3Rpb24oZSkgewoJCW10LmpzLlRpcC5oaWRlKCk7Cgl9KTsKCXJldHVybiBqcTsKfQoKdmFyIFRvb2xzID0gJGh4Q2xhc3Nlc1siVG9vbHMiXSA9IGZ1bmN0aW9uKCkgeyB9ClRvb2xzLl9fbmFtZV9fID0gWyJUb29scyJdOwpUb29scy5nbG9iYWxFdmFsID0gZnVuY3Rpb24oc2NyaXB0KSB7CglpZihzY3JpcHQuY29udGVudCA9PSBudWxsIHx8IHNjcmlwdC5jb250ZW50Lmxlbmd0aCA9PSAwKSByZXR1cm47Cgl2YXIgbyA9IGpzLkxpYi5kb2N1bWVudDsKCWpzLkxpYi5kb2N1bWVudCA9IHsgd3JpdGUgOiBmdW5jdGlvbihkYXRhKSB7CgkJdmFyIHQgPSBvLmNyZWF0ZUVsZW1lbnQoImRpdiIpOwoJCXQuc2V0QXR0cmlidXRlKCJpZCIsIl8iICsgc2NyaXB0LmlkKTsKCQl0LmlubmVySFRNTCA9IGRhdGE7CgkJdmFyIHMgPSBvLmdldEVsZW1lbnRCeUlkKHNjcmlwdC5pZCk7CgkJcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0LHMpOwoJfSwgZ2V0RWxlbWVudEJ5SWQgOiAkYmluZChvLG8uZ2V0RWxlbWVudEJ5SWQpLCBnZXRFbGVtZW50c0J5VGFnTmFtZSA6ICRiaW5kKG8sby5nZXRFbGVtZW50c0J5VGFnTmFtZSksIGdldEVsZW1lbnRzQnlOYW1lIDogJGJpbmQobyxvLmdldEVsZW1lbnRzQnlOYW1lKSwgYm9keSA6IG8uYm9keSwgYXR0YWNoRXZlbnQgOiBmdW5jdGlvbihldmVudE5hbWUsaGFuZGxlcikgewoJCXJldHVybiBvLmF0dGFjaEV2ZW50KGV2ZW50TmFtZSxoYW5kbGVyKTsKCX0sIGRldGFjaEV2ZW50IDogZnVuY3Rpb24oZXZlbnROYW1lLGhhbmRsZXIpIHsKCQlyZXR1cm4gby5kZXRhY2hFdmVudChldmVudE5hbWUsaGFuZGxlcik7Cgl9LCBhZGRFdmVudExpc3RlbmVyIDogZnVuY3Rpb24oZXZlbnROYW1lLGhhbmRsZXIsdXNlQ2FwdHVyZSkgewoJCXJldHVybiBvLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnROYW1lLGhhbmRsZXIsdXNlQ2FwdHVyZSk7Cgl9LCByZW1vdmVFdmVudExpc3RlbmVyIDogZnVuY3Rpb24oZXZlbnROYW1lLGhhbmRsZXIsdXNlQ2FwdHVyZSkgewoJCXJldHVybiBvLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnROYW1lLGhhbmRsZXIsdXNlQ2FwdHVyZSk7Cgl9LCBfZG9jdW1lbnQgOiBvLCBjb29raWUgOiBvLmNvb2tpZX07Cgl0cnkgewoJCWlmKGpzLkxpYi53aW5kb3cuZXhlY1NjcmlwdCAhPSBudWxsKSBqcy5MaWIud2luZG93LmV4ZWNTY3JpcHQoc2NyaXB0LmNvbnRlbnQpOyBlbHNlIGlmKGpzLkxpYi53aW5kb3cuZXZhbCAhPSBudWxsKSBqcy5MaWIud2luZG93LmV2YWwoc2NyaXB0LmNvbnRlbnQpOyBlbHNlIHsKCQkJdmFyIHMgPSBqcy5MaWIuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7CgkJCXMuc2V0QXR0cmlidXRlKCJ0eXBlIiwidGV4dC9qYXR2YXNjcmlwdCIpOwoJCQlzLmlubmVySFRNTCA9IHNjcmlwdC5jb250ZW50OwoJCQlqcy5MaWIuZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImhlYWQiKVswXS5hcHBlbmRDaGlsZChzKTsKCQl9Cgl9IGNhdGNoKCBlICkgewoJCWpzLkxpYi5kb2N1bWVudCA9IG87CgkJdGhyb3cgZTsKCX0KCWpzLkxpYi5kb2N1bWVudCA9IG87CglyZXR1cm47Cn0KVG9vbHMuZXh0cmFjdElkID0gZnVuY3Rpb24oZmxvdyxpZCkgewoJdmFyIGEgPSBmbG93LnNwbGl0KCJpZD1cIiIgKyBpZCArICJcIiIpOwoJaWYoYS5sZW5ndGggIT0gMikgcmV0dXJuIG51bGw7Cgl2YXIgdGFnUGFydCA9IGFbMF07Cgl2YXIgaWQxID0gdGFnUGFydC5sYXN0SW5kZXhPZigiPCIpICsgMTsKCXZhciB0YWcgPSAiIjsKCXZhciBfZzEgPSBpZDEsIF9nID0gdGFnUGFydC5sZW5ndGg7Cgl3aGlsZShfZzEgPCBfZykgewoJCXZhciBpID0gX2cxKys7CgkJdmFyIGMgPSBIeE92ZXJyaWRlcy5jY2EodGFnUGFydCxpKTsKCQlpZigoYyA8IDk3IHx8IGMgPiAxMjIpICYmIChjIDwgNjUgfHwgYyA+IDkwKSAmJiBjICE9IDU4KSBicmVhazsKCQl0YWcgKz0gU3RyaW5nLmZyb21DaGFyQ29kZShjKTsKCX0KCXZhciBpbXAgPSBhWzFdOwoJdmFyIGJlZ2luSW5kZXggPSBpbXAuaW5kZXhPZigiPiIpICsgMTsKCXZhciBjcnRJbmRleCA9IGJlZ2luSW5kZXg7Cgl2YXIgbmV4dENsb3NlSW5kZXggPSAwOwoJdmFyIG5leHRPcGVuSW5kZXggPSAwOwoJdmFyIGNvdW50ID0gMTsKCXZhciBsaW1pdCA9IDEwMDAwMDsKCXdoaWxlKHRydWUpIHsKCQluZXh0Q2xvc2VJbmRleCA9IGltcC5pbmRleE9mKCI8LyIgKyB0YWcgKyAiPiIsY3J0SW5kZXgpOwoJCW5leHRPcGVuSW5kZXggPSBpbXAuaW5kZXhPZigiPCIgKyB0YWcsY3J0SW5kZXgpOwoJCXZhciBkZXNjZW5kaW5nID0gbmV4dE9wZW5JbmRleCA8IG5leHRDbG9zZUluZGV4ICYmIG5leHRPcGVuSW5kZXggIT0gLTE7CgkJY291bnQgKz0gZGVzY2VuZGluZz8xOi0xOwoJCWlmKGNvdW50IDw9IDApIGJyZWFrOwoJCWNydEluZGV4ID0gZGVzY2VuZGluZz9pbXAuaW5kZXhPZigiPiIsbmV4dE9wZW5JbmRleCArIDEpOm5leHRDbG9zZUluZGV4ICsgMyArIHRhZy5sZW5ndGg7CgkJaWYobGltaXQtLSA9PSAwKSByZXR1cm4gbnVsbDsKCX0KCXJldHVybiBIeE92ZXJyaWRlcy5zdWJzdHIoaW1wLGJlZ2luSW5kZXgsbmV4dENsb3NlSW5kZXggLSAxIC0gYmVnaW5JbmRleCk7Cn0KVG9vbHMuZXh0cmFjdFRhZyA9IGZ1bmN0aW9uKGRhdGEsdGFnLG9mZnNldCkgewoJaWYob2Zmc2V0ID09IG51bGwpIG9mZnNldCA9IDA7Cgl2YXIgc3RhcnQgPSBkYXRhLmluZGV4T2YoIjwiICsgdGFnLG9mZnNldCk7CglpZihzdGFydCA9PSAtMSkgcmV0dXJuIG51bGw7Cgl2YXIgYmVnaW4gPSBkYXRhLmluZGV4T2YoIj4iLHN0YXJ0KSArIDE7Cgl2YXIgZW5kID0gZGF0YS5pbmRleE9mKCI8LyIgKyB0YWcgKyAiPiIsYmVnaW4pOwoJdmFyIGNvbnRlbnQgPSBIeE92ZXJyaWRlcy5zdWJzdHIoZGF0YSxiZWdpbixlbmQgLSBiZWdpbik7CgllbmQgKz0gMyArIHRhZy5sZW5ndGg7Cgl2YXIgZnVsbENvbnRlbnQgPSBIeE92ZXJyaWRlcy5zdWJzdHIoZGF0YSxzdGFydCxlbmQgLSBzdGFydCk7CglyZXR1cm4geyBjb250ZW50IDogY29udGVudCwgc3RhcnQgOiBzdGFydCwgZW5kIDogZW5kLCBmdWxsQ29udGVudCA6IGZ1bGxDb250ZW50LCBpZCA6IG51bGx9Owp9ClRvb2xzLmV4dHJhY3RTY3JpcHRzID0gZnVuY3Rpb24oZGF0YSkgewoJdmFyIHNjcmlwdHMgPSBbXTsKCXZhciBjdXJyZW50SW5kZXggPSAwOwoJd2hpbGUodHJ1ZSkgewoJCXZhciBpbmZvID0gVG9vbHMuZXh0cmFjdFRhZyhkYXRhLCJzY3JpcHQiLGN1cnJlbnRJbmRleCk7CgkJaWYoaW5mbyA9PSBudWxsKSBicmVhazsKCQlzY3JpcHRzLnB1c2goaW5mbyk7CgkJY3VycmVudEluZGV4ID0gaW5mby5lbmQ7Cgl9CglyZXR1cm4gc2NyaXB0czsKfQpUb29scy5oYXNUYWcgPSBmdW5jdGlvbih0YWcsc291cmNlKSB7CglyZXR1cm4gc291cmNlLnNwbGl0KHRhZyArICI9IikubGVuZ3RoID4gMTsKfQpUb29scy5tYWtlVGFnID0gZnVuY3Rpb24odGFnLHNvdXJjZSkgewoJdmFyIG91dHB1dCA9IHsgc291cmNlIDogc291cmNlLCBpZCA6ICIifTsKCXZhciBwb3MgPSBzb3VyY2UuaW5kZXhPZigiPiIpOwoJaWYocG9zID09IC0xKSByZXR1cm4gbnVsbDsKCWlmKFRvb2xzLmhhc1RhZyh0YWcsc291cmNlKSkgb3V0cHV0LmlkID0gc291cmNlLnNwbGl0KHRhZyArICI9IilbMV0uc3BsaXQoIlwiIilbMV07IGVsc2UgewoJCXZhciBiZWZvcmUgPSBIeE92ZXJyaWRlcy5zdWJzdHIoc291cmNlLDAscG9zKTsKCQl2YXIgYWZ0ZXIgPSBIeE92ZXJyaWRlcy5zdWJzdHIoc291cmNlLHBvcyxudWxsKTsKCQlvdXRwdXQuaWQgPSAic2NyaXB0XyIgKyBUb29scy5TQ1JJUFRfSUQrKzsKCQlvdXRwdXQuc291cmNlID0gYmVmb3JlICsgIiBpZD1cIiIgKyBvdXRwdXQuaWQgKyAiXCIiICsgYWZ0ZXI7Cgl9CglyZXR1cm4gb3V0cHV0Owp9ClRvb2xzLnVwZGF0ZUNvbnRlbnQgPSBmdW5jdGlvbih1cmwsc2VlayxkZXN0LGNiKSB7Cgl2YXIgciA9IG5ldyBoYXhlLkh0dHAodXJsKTsKCXZhciBkYmcgPSBmYWxzZTsKCXIub25EYXRhID0gZnVuY3Rpb24oZGF0YSkgewoJCXZhciBtZVIgPSByOwoJCXZhciBfZzEgPSAwLCBfZyA9IHNlZWsubGVuZ3RoOwoJCXdoaWxlKF9nMSA8IF9nKSB7CgkJCXZhciBpID0gX2cxKys7CgkJCXZhciB0YXJnZXQgPSBqcy5MaWIuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZGVzdCAhPSBudWxsP2Rlc3RbaV06c2Vla1tpXSk7CgkJCWlmKHRhcmdldCA9PSBudWxsKSB7CgkJCQlpZihkYmcpIG51bGw7CgkJCQljb250aW51ZTsKCQkJfQoJCQl2YXIgaW5wdXQgPSBUb29scy5leHRyYWN0SWQoZGF0YSxzZWVrW2ldKTsKCQkJaWYoaW5wdXQgPT0gbnVsbCkgdHJ5IHsKCQkJCWlmKGRiZykgbnVsbDsKCQkJCXRhcmdldCA9IGpzLkxpYi5kb2N1bWVudC5ib2R5OwoJCQkJdmFyIHRhZyA9IFRvb2xzLmV4dHJhY3RUYWcoZGF0YSwiYm9keSIsMCk7CgkJCQlpbnB1dCA9IHRhZy5jb250ZW50OwoJCQkJdmFyIHNjcmlwdHMgPSBUb29scy5leHRyYWN0U2NyaXB0cyhpbnB1dCk7CgkJCQl2YXIgX2cyID0gMDsKCQkJCXdoaWxlKF9nMiA8IHNjcmlwdHMubGVuZ3RoKSB7CgkJCQkJdmFyIHMgPSBzY3JpcHRzW19nMl07CgkJCQkJKytfZzI7CgkJCQkJdmFyIGRhdGExID0gVG9vbHMubWFrZVRhZygiaWQiLHMuZnVsbENvbnRlbnQpOwoJCQkJCWlmKGRhdGExICE9IG51bGwpIHsKCQkJCQkJcy5pZCA9IGRhdGExLmlkOwoJCQkJCQlpbnB1dCA9IFN0cmluZ1Rvb2xzLnJlcGxhY2UoaW5wdXQscy5mdWxsQ29udGVudCxkYXRhMS5zb3VyY2UpOwoJCQkJCX0KCQkJCX0KCQkJCXRhcmdldC5pbm5lckhUTUwgPSBpbnB1dDsKCQkJCWlmKGRiZykgbnVsbDsKCQkJCXZhciBfZzIgPSAwOwoJCQkJd2hpbGUoX2cyIDwgc2NyaXB0cy5sZW5ndGgpIHsKCQkJCQl2YXIgcyA9IHNjcmlwdHNbX2cyXTsKCQkJCQkrK19nMjsKCQkJCQlUb29scy5nbG9iYWxFdmFsKHMpOwoJCQkJfQoJCQkJaWYoY2IgIT0gbnVsbCkgY2IoKTsKCQkJCXJldHVybjsKCQkJfSBjYXRjaCggZSApIHsKCQkJCXZhciByZWdJdCA9IHRydWU7CgkJCQl2YXIgaCA9ICIiOwoJCQkJdmFyIG1ldGEgPSAiIjsKCQkJCXRyeSB7CgkJCQkJaCA9IGRhdGEuc3BsaXQoIjxoZWFkPiIpWzFdLnNwbGl0KCI8L2hlYWQ+IilbMF07CgkJCQkJdmFyIHN0YXJ0ID0gIjxtZXRhIG5hbWU9XCJtc2hcIiBjb250ZW50PVwiIjsKCQkJCQl2YXIgaTEgPSBoLmluZGV4T2YoIjxtZXRhIG5hbWU9XCJtc2hcIiIpOwoJCQkJCWlmKGkxICE9IG51bGwpIHsKCQkJCQkJbWV0YSA9IEh4T3ZlcnJpZGVzLnN1YnN0cihoLGkxICsgc3RhcnQubGVuZ3RoLG51bGwpOwoJCQkJCQl2YXIgZW5kID0gbWV0YS5pbmRleE9mKCJcIiIpOwoJCQkJCQltZXRhID0gSHhPdmVycmlkZXMuc3Vic3RyKG1ldGEsMCxlbmQpOwoJCQkJCQl2YXIga2V5cyA9IG1ldGEuc3BsaXQoIiwiKTsKCQkJCQkJaWYoTGFtYmRhLmhhcyhrZXlzLCJERUFUSCIpKSByZWdJdCA9IGZhbHNlOwoJCQkJCX0KCQkJCX0gY2F0Y2goIGQgKSB7CgkJCQkJaCA9ICJwYXJzZSBlcnJvciBkYXRhOiIgKyBkYXRhLmxlbmd0aCArICIgIjsKCQkJCQlpZihkYXRhLmxlbmd0aCA8IDI1NikgaCA9IGggKyAiIGRhdGE6ICIgKyBkYXRhOwoJCQkJfQoJCQkJdmFyIGRzaXplID0gZGF0YS5sZW5ndGg7CgkJCQl2YXIgbXNnID0gImVycm9yIDIgIGxvYWRpbmc6IiArIHVybCArICIgdGd0OiIgKyBzZWVrW2ldICsgIiBtZXRhOiAiICsgbWV0YSArICIgaGxlbjogIiArIGgubGVuZ3RoICsgIiBlcnI6ICIgKyBTdGQuc3RyaW5nKGUpICsgIiBlczogIiArIGhheGUuU3RhY2suZXhjZXB0aW9uU3RhY2soKS50b1N0cmluZygpOwoJCQkJaWYoaC5sZW5ndGggPiAwKSBtc2cgKz0gIiBobCA6ID4+IiArIGggKyAiPDwiOwoJCQkJaWYoZGJnKSBudWxsOwoJCQkJanMuTGliLndpbmRvdy5sb2NhdGlvbi5hc3NpZ24oVG9vbHMuZGVmYXVsdFVybCA9PSBudWxsP3VybDpUb29scy5kZWZhdWx0VXJsKTsKCQkJCXZhciBzID0gU3RyaW5nVG9vbHMudXJsRW5jb2RlKG1zZyk7CgkJCQlpZihyZWdJdCkgVG9vbHMucGluZygicmVnaXN0ZXJFcnJvci8iICsgcyk7CgkJCQlyZXR1cm47CgkJCX0gZWxzZSBpZihkYmcpIG51bGw7CgkJCXZhciBzY3JpcHRzID0gVG9vbHMuZXh0cmFjdFNjcmlwdHMoaW5wdXQpOwoJCQl2YXIgX2cyID0gMDsKCQkJd2hpbGUoX2cyIDwgc2NyaXB0cy5sZW5ndGgpIHsKCQkJCXZhciBzID0gc2NyaXB0c1tfZzJdOwoJCQkJKytfZzI7CgkJCQl2YXIgZGF0YTEgPSBUb29scy5tYWtlVGFnKCJpZCIscy5mdWxsQ29udGVudCk7CgkJCQlpZihkYXRhMSAhPSBudWxsKSB7CgkJCQkJcy5pZCA9IGRhdGExLmlkOwoJCQkJCWlucHV0ID0gU3RyaW5nVG9vbHMucmVwbGFjZShpbnB1dCxzLmZ1bGxDb250ZW50LGRhdGExLnNvdXJjZSk7CgkJCQl9CgkJCX0KCQkJdGFyZ2V0LmlubmVySFRNTCA9IGlucHV0OwoJCQlpZihkYmcpIG51bGw7CgkJCXZhciBfZzIgPSAwOwoJCQl3aGlsZShfZzIgPCBzY3JpcHRzLmxlbmd0aCkgewoJCQkJdmFyIHMgPSBzY3JpcHRzW19nMl07CgkJCQkrK19nMjsKCQkJCVRvb2xzLmdsb2JhbEV2YWwocyk7CgkJCX0KCQkJaWYoZGJnKSBudWxsOwoJCX0KCQlpZihjYiAhPSBudWxsKSBjYigpOwoJfTsKCXIucmVxdWVzdChmYWxzZSk7CglyZXR1cm4gZmFsc2U7Cn0KVG9vbHMucGluZyA9IGZ1bmN0aW9uKHVybCxjYmspIHsKCXZhciByID0gbmV3IGhheGUuSHR0cCh1cmwpOwoJci5hc3luYyA9IHRydWU7CglyLnJlcXVlc3QoZmFsc2UpOwoJaWYoY2JrICE9IG51bGwpIHIub25EYXRhID0gY2JrOwp9ClRvb2xzLnNlbmQyU2Vzc2lvblN0b3JlID0gZnVuY3Rpb24oayx2KSB7Cgl0cnkgewoJCXZhciBzZXIgPSBoYXhlLlNlcmlhbGl6ZXIucnVuKHYpOwoJCSgoZnVuY3Rpb24oJHRoaXMpIHsKCQkJdmFyICRyOwoJCQl2YXIgczsKCQkJdHJ5IHsKCQkJCXMgPSB3aW5kb3cuc2Vzc2lvblN0b3JhZ2U7CgkJCQlzLmdldEl0ZW0oIiIpOwoJCQl9IGNhdGNoKCBlICkgewoJCQkJcyA9IG51bGw7CgkJCX0KCQkJJHIgPSBzOwoJCQlyZXR1cm4gJHI7CgkJfSh0aGlzKSkpLnNldEl0ZW0oayxzZXIpOwoJfSBjYXRjaCggZCApIHsKCQludWxsOwoJfQp9ClRvb2xzLmdldEZyb21TZXNzaW9uU3RvcmUgPSBmdW5jdGlvbihrKSB7Cgl2YXIgdiA9ICgoZnVuY3Rpb24oJHRoaXMpIHsKCQl2YXIgJHI7CgkJdmFyIHM7CgkJdHJ5IHsKCQkJcyA9IHdpbmRvdy5zZXNzaW9uU3RvcmFnZTsKCQkJcy5nZXRJdGVtKCIiKTsKCQl9IGNhdGNoKCBlICkgewoJCQlzID0gbnVsbDsKCQl9CgkJJHIgPSBzOwoJCXJldHVybiAkcjsKCX0odGhpcykpKS5nZXRJdGVtKGspOwoJaWYodiA9PSBudWxsKSByZXR1cm4gbnVsbDsKCXJldHVybiBoYXhlLlVuc2VyaWFsaXplci5ydW4odik7Cn07ClRvb2xzLnNlbmQyU3RvcmUgPSBmdW5jdGlvbihrLHYpIHsKCXRyeSB7CgkJdmFyIHNlciA9IGhheGUuU2VyaWFsaXplci5ydW4odik7CgkJanMuQnJvd3Nlci5nZXRMb2NhbFN0b3JhZ2UoKS5zZXRJdGVtKGssc2VyKTsKCX0gY2F0Y2goIGQgKSB7CgkJbnVsbDsKCX0KfTsKVG9vbHMuZ2V0RnJvbVN0b3JlID0gZnVuY3Rpb24oaykgewoJdmFyIHYgPSBqcy5Ccm93c2VyLmdldExvY2FsU3RvcmFnZSgpLmdldEl0ZW0oayk7CglpZih2ID09IG51bGwpIHJldHVybiBudWxsOwoJcmV0dXJuIGhheGUuVW5zZXJpYWxpemVyLnJ1bih2KTsKfTsKVG9vbHMuanFDb2xUb0ludCA9IGZ1bmN0aW9uKHN0cixkZWYpIHsKCWlmKFN0cmluZ1Rvb2xzLnN0YXJ0c1dpdGgoc3RyLCIjIikpIHJldHVybiBTdGQucGFyc2VJbnQoIjB4IiArIEh4T3ZlcnJpZGVzLnN1YnN0cihzdHIsMSw5OTkpKTsgZWxzZSBpZihTdHJpbmdUb29scy5zdGFydHNXaXRoKHN0ciwicmdiIikpIHsKCQlzdHIgPSBIeE92ZXJyaWRlcy5zdWJzdHIoc3RyLDMsbnVsbCk7CgkJdmFyIHNwbCA9IHN0ci5zcGxpdCgiLCIpOwoJCXZhciByID0gIjAiOwoJCXZhciBnID0gIjAiOwoJCXZhciBiID0gIjAiOwoJCXZhciBfZyA9IDA7CgkJd2hpbGUoX2cgPCBzcGwubGVuZ3RoKSB7CgkJCXZhciBzID0gc3BsW19nXTsKCQkJKytfZzsKCQkJaWYoU3RyaW5nVG9vbHMuc3RhcnRzV2l0aChzLCIoIikpIHIgPSBIeE92ZXJyaWRlcy5zdWJzdHIocywxLG51bGwpOyBlbHNlIGlmKFN0cmluZ0V4LmVuZHNXaXRoKHMsIikiKSkgYiA9IEh4T3ZlcnJpZGVzLnN1YnN0cihzLDAscy5sZW5ndGggLSAxKTsgZWxzZSBnID0gczsKCQl9CgkJcmV0dXJuIFN0ZC5wYXJzZUludChyKSA8PCAxNiB8IFN0ZC5wYXJzZUludChnKSA8PCA4IHwgU3RkLnBhcnNlSW50KGIpOwoJfSBlbHNlIHJldHVybiBkZWY7Cn0KCnZhciBMYW1iZGEgPSBmdW5jdGlvbigpIHsgfQokaHhDbGFzc2VzWyJMYW1iZGEiXSA9IExhbWJkYTsKTGFtYmRhLl9fbmFtZV9fID0gWyJMYW1iZGEiXTsKTGFtYmRhLmFycmF5ID0gZnVuY3Rpb24oaXQpIHsKCXZhciBhID0gbmV3IEFycmF5KCk7Cgl2YXIgJGl0MCA9ICRpdGVyYXRvcihpdCkoKTsKCXdoaWxlKCAkaXQwLmhhc05leHQoKSApIHsKCQl2YXIgaSA9ICRpdDAubmV4dCgpOwoJCWEucHVzaChpKTsKCX0KCXJldHVybiBhOwp9CkxhbWJkYS5saXN0ID0gZnVuY3Rpb24oaXQpIHsKCXZhciBsID0gbmV3IExpc3QoKTsKCXZhciAkaXQwID0gJGl0ZXJhdG9yKGl0KSgpOwoJd2hpbGUoICRpdDAuaGFzTmV4dCgpICkgewoJCXZhciBpID0gJGl0MC5uZXh0KCk7CgkJbC5hZGQoaSk7Cgl9CglyZXR1cm4gbDsKfQpMYW1iZGEubWFwID0gZnVuY3Rpb24oaXQsZikgewoJdmFyIGwgPSBuZXcgTGlzdCgpOwoJdmFyICRpdDAgPSAkaXRlcmF0b3IoaXQpKCk7Cgl3aGlsZSggJGl0MC5oYXNOZXh0KCkgKSB7CgkJdmFyIHggPSAkaXQwLm5leHQoKTsKCQlsLmFkZChmKHgpKTsKCX0KCXJldHVybiBsOwp9CkxhbWJkYS5oYXMgPSBmdW5jdGlvbihpdCxlbHQpIHsKCXZhciAkaXQwID0gJGl0ZXJhdG9yKGl0KSgpOwoJd2hpbGUoICRpdDAuaGFzTmV4dCgpICkgewoJCXZhciB4ID0gJGl0MC5uZXh0KCk7CgkJaWYoeCA9PSBlbHQpIHJldHVybiB0cnVlOwoJfQoJcmV0dXJuIGZhbHNlOwp9CkxhbWJkYS5leGlzdHMgPSBmdW5jdGlvbihpdCxmKSB7Cgl2YXIgJGl0MCA9ICRpdGVyYXRvcihpdCkoKTsKCXdoaWxlKCAkaXQwLmhhc05leHQoKSApIHsKCQl2YXIgeCA9ICRpdDAubmV4dCgpOwoJCWlmKGYoeCkpIHJldHVybiB0cnVlOwoJfQoJcmV0dXJuIGZhbHNlOwp9CkxhbWJkYS5pdGVyID0gZnVuY3Rpb24oaXQsZikgewoJdmFyICRpdDAgPSAkaXRlcmF0b3IoaXQpKCk7Cgl3aGlsZSggJGl0MC5oYXNOZXh0KCkgKSB7CgkJdmFyIHggPSAkaXQwLm5leHQoKTsKCQlmKHgpOwoJfQp9CkxhbWJkYS5maWx0ZXIgPSBmdW5jdGlvbihpdCxmKSB7Cgl2YXIgbCA9IG5ldyBMaXN0KCk7Cgl2YXIgJGl0MCA9ICRpdGVyYXRvcihpdCkoKTsKCXdoaWxlKCAkaXQwLmhhc05leHQoKSApIHsKCQl2YXIgeCA9ICRpdDAubmV4dCgpOwoJCWlmKGYoeCkpIGwuYWRkKHgpOwoJfQoJcmV0dXJuIGw7Cn0KTGFtYmRhLmZvbGQgPSBmdW5jdGlvbihpdCxmLGZpcnN0KSB7Cgl2YXIgJGl0MCA9ICRpdGVyYXRvcihpdCkoKTsKCXdoaWxlKCAkaXQwLmhhc05leHQoKSApIHsKCQl2YXIgeCA9ICRpdDAubmV4dCgpOwoJCWZpcnN0ID0gZih4LGZpcnN0KTsKCX0KCXJldHVybiBmaXJzdDsKfQpMYW1iZGEuY291bnQgPSBmdW5jdGlvbihpdCxwcmVkKSB7Cgl2YXIgbiA9IDA7CglpZihwcmVkID09IG51bGwpIHsKCQl2YXIgJGl0MCA9ICRpdGVyYXRvcihpdCkoKTsKCQl3aGlsZSggJGl0MC5oYXNOZXh0KCkgKSB7CgkJCXZhciBfID0gJGl0MC5uZXh0KCk7CgkJCW4rKzsKCQl9Cgl9IGVsc2UgewoJCXZhciAkaXQxID0gJGl0ZXJhdG9yKGl0KSgpOwoJCXdoaWxlKCAkaXQxLmhhc05leHQoKSApIHsKCQkJdmFyIHggPSAkaXQxLm5leHQoKTsKCQkJaWYocHJlZCh4KSkgbisrOwoJCX0KCX0KCXJldHVybiBuOwp9CkxhbWJkYS5lbXB0eSA9IGZ1bmN0aW9uKGl0KSB7CglyZXR1cm4gISRpdGVyYXRvcihpdCkoKS5oYXNOZXh0KCk7Cn0KZnVuY3Rpb24gJGl0ZXJhdG9yKG8pIHsgaWYoICQuaXNBcnJheShvKSApIHJldHVybiBmdW5jdGlvbigpIHsgcmV0dXJuIEh4T3ZlcnJpZGVzLml0ZXIobyk7IH07IHJldHVybiB0eXBlb2Yoby5pdGVyYXRvcikgPT0gJ2Z1bmN0aW9uJyA/ICRiaW5kKG8sby5pdGVyYXRvcikgOiBvLml0ZXJhdG9yOyB9Owp2YXIgJF8sICRmaWQgPSAwOwpmdW5jdGlvbiAkYmluZChvLG0pIHsKCWlmKCBtID09IG51bGwgKSByZXR1cm4gbnVsbDsKCWlmKCBtLl9faWRfXyA9PSBudWxsICkgbS5fX2lkX18gPSAkZmlkKys7Cgl2YXIgZjsKCWlmKCBvLmh4X19jbG9zdXJlc19fID09IG51bGwgKSBvLmh4X19jbG9zdXJlc19fID0ge307IGVsc2UgZiA9IG8uaHhfX2Nsb3N1cmVzX19bbS5fX2lkX19dOwoJaWYoIGYgPT0gbnVsbCApIHsKCQlmID0gZnVuY3Rpb24oKXsKCQkJcmV0dXJuIGYubWV0aG9kLmFwcGx5KGYuc2NvcGUsIGFyZ3VtZW50cyk7CgkJfTsKCQlmLnNjb3BlID0gbzsgZi5tZXRob2QgPSBtOyBvLmh4X19jbG9zdXJlc19fW20uX19pZF9fXSA9IGY7Cgl9IHJldHVybiBmOwp9OwokLmZuLml0ZXJhdG9yID0gZnVuY3Rpb24oKSB7CglyZXR1cm4gewoJcG9zIDogMCwgaiA6IHRoaXMsCgloYXNOZXh0IDogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIHRoaXMucG9zIDwgdGhpcy5qLmxlbmd0aDsKCX0sIG5leHQgOiBmdW5jdGlvbigpIHsKCQlyZXR1cm4gJCh0aGlzLmpbdGhpcy5wb3MrK10pOwoJfX07Cn07CgoKdmFyIEFMTUhlcm9MaXN0U3RhdGUgPSAkaHhDbGFzc2VzWyJBTE1IZXJvTGlzdFN0YXRlIl0gPSB7IF9fZW5hbWVfXyA6IFsiQUxNSGVyb0xpc3RTdGF0ZSJdLCBfX2NvbnN0cnVjdHNfXyA6IFsiRGlzcGxheUhlcm9Sb29tQWN0aW9uQWN0aW9ucyIsIkRpc3BsYXlIZXJvSXRlbUFjdGlvbnMiXSB9CkFMTUhlcm9MaXN0U3RhdGUuRGlzcGxheUhlcm9Sb29tQWN0aW9uQWN0aW9ucyA9IFsiRGlzcGxheUhlcm9Sb29tQWN0aW9uQWN0aW9ucyIsMF07CkFMTUhlcm9MaXN0U3RhdGUuRGlzcGxheUhlcm9Sb29tQWN0aW9uQWN0aW9ucy50b1N0cmluZyA9ICRlc3RyOwpBTE1IZXJvTGlzdFN0YXRlLkRpc3BsYXlIZXJvUm9vbUFjdGlvbkFjdGlvbnMuX19lbnVtX18gPSBBTE1IZXJvTGlzdFN0YXRlOwpBTE1IZXJvTGlzdFN0YXRlLkRpc3BsYXlIZXJvSXRlbUFjdGlvbnMgPSBmdW5jdGlvbihzZXJpYWwpIHsgdmFyICR4ID0gWyJEaXNwbGF5SGVyb0l0ZW1BY3Rpb25zIiwxLHNlcmlhbF07ICR4Ll9fZW51bV9fID0gQUxNSGVyb0xpc3RTdGF0ZTsgJHgudG9TdHJpbmcgPSAkZXN0cjsgcmV0dXJuICR4OyB9CnZhciBBTE1Sb29tTGlzdFN0YXRlID0gJGh4Q2xhc3Nlc1siQUxNUm9vbUxpc3RTdGF0ZSJdID0geyBfX2VuYW1lX18gOiBbIkFMTVJvb21MaXN0U3RhdGUiXSwgX19jb25zdHJ1Y3RzX18gOiBbIkRpc3BsYXlIZXJvQWN0aW9uIiwiRGlzcGxheVJvb21BY3Rpb24iLCJEaXNwbGF5Tm9uZSJdIH0KQUxNUm9vbUxpc3RTdGF0ZS5EaXNwbGF5SGVyb0FjdGlvbiA9IGZ1bmN0aW9uKHNlcmlhbCkgeyB2YXIgJHggPSBbIkRpc3BsYXlIZXJvQWN0aW9uIiwwLHNlcmlhbF07ICR4Ll9fZW51bV9fID0gQUxNUm9vbUxpc3RTdGF0ZTsgJHgudG9TdHJpbmcgPSAkZXN0cjsgcmV0dXJuICR4OyB9CkFMTVJvb21MaXN0U3RhdGUuRGlzcGxheVJvb21BY3Rpb24gPSBmdW5jdGlvbihzZXJpYWwpIHsgdmFyICR4ID0gWyJEaXNwbGF5Um9vbUFjdGlvbiIsMSxzZXJpYWxdOyAkeC5fX2VudW1fXyA9IEFMTVJvb21MaXN0U3RhdGU7ICR4LnRvU3RyaW5nID0gJGVzdHI7IHJldHVybiAkeDsgfQpBTE1Sb29tTGlzdFN0YXRlLkRpc3BsYXlOb25lID0gWyJEaXNwbGF5Tm9uZSIsMl07CkFMTVJvb21MaXN0U3RhdGUuRGlzcGxheU5vbmUudG9TdHJpbmcgPSAkZXN0cjsKQUxNUm9vbUxpc3RTdGF0ZS5EaXNwbGF5Tm9uZS5fX2VudW1fXyA9IEFMTVJvb21MaXN0U3RhdGU7Cgp2YXIgQWN0aW9uTGlzdE1haW50YWluZXIgPSAkaHhDbGFzc2VzWyJBY3Rpb25MaXN0TWFpbnRhaW5lciJdID0gZnVuY3Rpb24oKSB7Cgl0aGlzLmhlcm9Xb3JraW5nID0gZmFsc2U7Cgl0aGlzLnJvb21Xb3JraW5nID0gZmFsc2U7Cn07CkFjdGlvbkxpc3RNYWludGFpbmVyLl9fbmFtZV9fID0gWyJBY3Rpb25MaXN0TWFpbnRhaW5lciJdOwpBY3Rpb25MaXN0TWFpbnRhaW5lci5qID0gZnVuY3Rpb24ocykgewoJcmV0dXJuIG5ldyBqcy5KUXVlcnkocyk7Cn0KQWN0aW9uTGlzdE1haW50YWluZXIucHJvdG90eXBlID0gewoJcmVmcmVzaFJvb21JbnY6IGZ1bmN0aW9uKCkgewoJCXZhciByb29tU2VsID0gSnFFeC5qKCIjcm9vbSAuc2VsZWN0ZWQiKTsKCQl2YXIgdG9TaG93ID0gbnVsbDsKCQlpZihyb29tU2VsLmxlbmd0aCA+IDApIHRvU2hvdyA9IHJvb21TZWwucGFyZW50KCkuYXR0cigic2VyaWFsIik7IGVsc2UgaWYoTWFpbi5zZWwuY3VycmVudFJvb21TZWxlY3Rpb24gIT0gbnVsbCkgewoJCQl0b1Nob3cgPSBNYWluLnNlbC5jdXJyZW50Um9vbVNlbGVjdGlvbjsKCQkJdGhpcy51cGRhdGVSb29tTGlzdFN0YXRlKEFMTVJvb21MaXN0U3RhdGUuRGlzcGxheVJvb21BY3Rpb24oTWFpbi5zZWwuY3VycmVudFJvb21TZWxlY3Rpb24pKTsKCQl9IGVsc2UgdGhpcy51cGRhdGVSb29tTGlzdFN0YXRlKEFMTVJvb21MaXN0U3RhdGUuRGlzcGxheU5vbmUpOwoJCWlmKHRvU2hvdyA9PSBudWxsKSB0aGlzLnVwZGF0ZVJvb21MaXN0U3RhdGUoQUxNUm9vbUxpc3RTdGF0ZS5EaXNwbGF5Tm9uZSk7IGVsc2UgaWYoTWFpbi5oZXJvZXMuZ2V0KHRvU2hvdykgIT0gbnVsbCkgdGhpcy51cGRhdGVSb29tTGlzdFN0YXRlKEFMTVJvb21MaXN0U3RhdGUuRGlzcGxheUhlcm9BY3Rpb24odG9TaG93KSk7IGVsc2UgdGhpcy51cGRhdGVSb29tTGlzdFN0YXRlKEFMTVJvb21MaXN0U3RhdGUuRGlzcGxheVJvb21BY3Rpb24odG9TaG93KSk7Cgl9CgkscmVmcmVzaEhlcm9JbnY6IGZ1bmN0aW9uKCkgewoJCXZhciBpdGVtU2VsID0gSnFFeC5qKCIjbXlJbnZlbnRvcnkgLnNlbGVjdGVkIik7CgkJaWYoaXRlbVNlbC5sZW5ndGggPD0gMCkgdGhpcy5jaGFuZ2VIZXJvTGlzdFN0YXRlKEFMTUhlcm9MaXN0U3RhdGUuRGlzcGxheUhlcm9Sb29tQWN0aW9uQWN0aW9ucyk7IGVsc2UgdGhpcy5jaGFuZ2VIZXJvTGlzdFN0YXRlKEFMTUhlcm9MaXN0U3RhdGUuRGlzcGxheUhlcm9JdGVtQWN0aW9ucyhpdGVtU2VsLnBhcmVudCgpLmF0dHIoInNlcmlhbCIpKSk7Cgl9CgkscmVmcmVzaDogZnVuY3Rpb24oZm9yY2UpIHsKCQlpZihmb3JjZSA9PSBudWxsKSBmb3JjZSA9IGZhbHNlOwoJCWlmKGZvcmNlKSB7CgkJCXRoaXMuaGVyb1N0YXRlID0gbnVsbDsKCQkJdGhpcy5yb29tU3RhdGUgPSBudWxsOwoJCQl0aGlzLnJvb21Xb3JraW5nID0gZmFsc2U7CgkJCXRoaXMuaGVyb1dvcmtpbmcgPSBmYWxzZTsKCQl9CgkJdGhpcy5yZWZyZXNoSGVyb0ludigpOwoJCXRoaXMucmVmcmVzaFJvb21JbnYoKTsKCX0KCSx1cGRhdGVSb29tTGlzdFN0YXRlOiBmdW5jdGlvbihzdCkgewoJCXZhciBfZyA9IHRoaXM7CgkJdmFyIHNldCA9IEpxRXguaigiI3Jvb21BY3Rpb25MaXN0MSIpLmFkZCgiI3Jvb21BY3Rpb25MaXN0MiIpOwoJCWlmKHRoaXMucm9vbVN0YXRlICE9IG51bGwgJiYgVHlwZS5lbnVtRXEodGhpcy5yb29tU3RhdGUsc3QpKSByZXR1cm47CgkJaWYodGhpcy5yb29tV29ya2luZykgewoJCQlpZih0aGlzLnJvb21TdGF0ZSA9PSBudWxsIHx8IHRoaXMucm9vbVN0YXRlID09IEFMTVJvb21MaXN0U3RhdGUuRGlzcGxheU5vbmUpIHsKCQkJCXNldC5zdG9wKCk7CgkJCQl0aGlzLnJvb21Xb3JraW5nID0gZmFsc2U7CgkJCQl0aGlzLnVwZGF0ZVJvb21MaXN0U3RhdGUoc3QpOwoJCQl9IGVsc2UgbnVsbDsKCQkJcmV0dXJuOwoJCX0KCQlpZihzZXQubGVuZ3RoID4gMCkgewoJCQl0aGlzLnJvb21Xb3JraW5nID0gdHJ1ZTsKCQkJc2V0LmZhZGVUbygxMjAsMCxmdW5jdGlvbigpIHsKCQkJCXZhciAkZSA9IChzdCk7CgkJCQlzd2l0Y2goICRlWzFdICkgewoJCQkJY2FzZSAwOgoJCQkJCXZhciBpblNlcmlhbCA9ICRlWzJdOwoJCQkJCXZhciBwYWNrID0gTWFpbi5oZXJvZXMuZ2V0KGluU2VyaWFsKTsKCQkJCQl2YXIgdGd0ID0gSnFFeC5qKCIjcm9vbUFjdGlvbkxpc3QyIik7CgkJCQkJdmFyIHNyYyA9IEpxRXguaigiLmNkQWN0aW9uUmVwb3NpdG9yeSIpOwoJCQkJCXZhciBhY3Rpb25zID0gc3JjLmZpbmQoIlt3ZWJkYXRhPSIgKyBpblNlcmlhbCArICJdIikuY2xvbmUoKTsKCQkJCQl0Z3QuaHRtbChhY3Rpb25zKTsKCQkJCQluZXcganMuSlF1ZXJ5KCIjY2RJdGVtQWN0aW9ucyIpLmFkZENsYXNzKCJzZWxlY3RwbGF5ZXIiKTsKCQkJCQl2YXIgdGd0aCA9IEpxRXguaigiI3Jvb21BY3Rpb25MaXN0MSIpOwoJCQkJCXRndGguaHRtbCgiIik7CgkJCQkJdGd0aC5wYXJlbnQoKS5hZGRDbGFzcygicGxheWVyIik7CgkJCQkJdmFyIGh0bWxSZXMgPSBuZXcganMuSlF1ZXJ5KCIuY2RIZXJvU2hlZXQiKS5jbG9uZSgpOwoJCQkJCWh0bWxSZXMuZmluZCgiLmNkRmFjZSIpLmFkZENsYXNzKCJwb3J0cmFpdF8iICsgcGFjay5kZXZfc3VybmFtZSk7CgkJCQkJaHRtbFJlcy5maW5kKCIuY2RDaGFyTmFtZSIpLmh0bWwocGFjay5uYW1lKTsKCQkJCQlodG1sUmVzLmZpbmQoIi5jZFNraWxscyIpLmh0bWwocGFjay5za2lsbHMubWFwKGZ1bmN0aW9uKHMpIHsKCQkJCQkJcmV0dXJuIG5ldyBUYWcoImxpIikuYXBwZW5kKG5ldyBUYWcoImltZyIpLmF0dHIoInNyYyIsIi9pbWcvaWNvbnMvc2tpbGxzLyIgKyBzLmltZyArICIucG5nIikpLnRpcChVdGlscy5lc2NhcGVKUyhzLm5hbWUpLFV0aWxzLmVzY2FwZUpTKHMuZGVzYykpLnRvU3RyaW5nKCk7CgkJCQkJfSkuam9pbigiIikpOwoJCQkJCXZhciBzdENvbnQgPSBuZXcganMuSlF1ZXJ5KCIuY2RTdGF0dXNMaXN0Iik7CgkJCQkJdmFyIGNvbnRlbnQgPSBuZXcgTGlzdCgpOwoJCQkJCXZhciAkaXQwID0gcGFjay5zdGF0dXNlcy5pdGVyYXRvcigpOwoJCQkJCXdoaWxlKCAkaXQwLmhhc05leHQoKSApIHsKCQkJCQkJdmFyIHN0MSA9ICRpdDAubmV4dCgpOwoJCQkJCQljb250ZW50LnB1c2gobmV3IFRhZygibGkiKS5hcHBlbmQobmV3IFRhZygiaW1nIikuYXR0cigic3JjIiwiL2ltZy9pY29ucy91aS9zdGF0dXMvIiArIHN0MS5pbWcgKyAiLnBuZyIpKS50aXAoVXRpbHMuZXNjYXBlSlMoc3QxLm5hbWUpLFV0aWxzLmVzY2FwZUpTKHN0MS5kZXNjKSkudG9TdHJpbmcoKSk7CgkJCQkJfQoJCQkJCXZhciAkaXQxID0gcGFjay50aXRsZXMuaXRlcmF0b3IoKTsKCQkJCQl3aGlsZSggJGl0MS5oYXNOZXh0KCkgKSB7CgkJCQkJCXZhciB0ID0gJGl0MS5uZXh0KCk7CgkJCQkJCWNvbnRlbnQucHVzaChuZXcgVGFnKCJsaSIpLmFwcGVuZChuZXcgVGFnKCJpbWciKS5hdHRyKCJzcmMiLCIvaW1nL2ljb25zL3VpLyIgKyB0LmltZyArICIucG5nIikpLnRpcChVdGlscy5lc2NhcGVKUyh0Lm5hbWUpLFV0aWxzLmVzY2FwZUpTKHQuZGVzYykpLnRvU3RyaW5nKCkpOwoJCQkJCX0KCQkJCQlpZihwYWNrLnNwb3JlcyAhPSBudWxsKSBjb250ZW50LnB1c2gobmV3IFRhZygic3BhbiIpLmFwcGVuZChuZXcgVGFnKCJsaSIpLmFwcGVuZChuZXcgVGFnKCJpbWciKS5hdHRyKCJzcmMiLHBhY2suc3BvcmVzLmltZykpKS5jb250ZW50KCJ4IiArIHBhY2suc3BvcmVzLm5iKS50b1N0cmluZygpKTsKCQkJCQlzdENvbnQuaHRtbChjb250ZW50LmpvaW4oIiIpKTsKCQkJCQlodG1sUmVzLmZpbmQoIi5jZFN0YXR1c0xpc3QiKS5odG1sKGNvbnRlbnQuam9pbigiIikpOwoJCQkJCWh0bWxSZXMuZmluZCgiLnByZXNlbnRhdGlvbiIpLmh0bWwocGFjay5zaG9ydF9kZXNjKTsKCQkJCQlpZihwYWNrLm1lKSBodG1sUmVzLmZpbmQoIi5jZEVjb0xpbmsiKS5oaWRlKCk7CgkJCQkJdGd0aC5odG1sKGh0bWxSZXMuY2hpbGRyZW4oKSk7CgkJCQkJdGd0LmZhZGVUbygxMjAsMSk7CgkJCQkJdGd0aC5mYWRlVG8oMTIwLDEpOwoJCQkJCU1haW4udGlwQWxsKCk7CgkJCQkJX2cucm9vbVdvcmtpbmcgPSBmYWxzZTsKCQkJCQlicmVhazsKCQkJCWNhc2UgMToKCQkJCQl2YXIgaW5TZXJpYWwgPSAkZVsyXTsKCQkJCQl2YXIgdGd0MSA9IEpxRXguaigiI3Jvb21BY3Rpb25MaXN0MSIpOwoJCQkJCXZhciB0Z3QyID0gSnFFeC5qKCIjcm9vbUFjdGlvbkxpc3QyIik7CgkJCQkJdmFyIHNyYyA9IEpxRXguaigiLmNkQWN0aW9uUmVwb3NpdG9yeSIpOwoJCQkJCXZhciBhY3Rpb25zID0gc3JjLmZpbmQoIlt3ZWJkYXRhPSIgKyBpblNlcmlhbCArICJdIikuY2xvbmUoKTsKCQkJCQluZXcganMuSlF1ZXJ5KCIjY2RJdGVtQWN0aW9ucyIpLnJlbW92ZUNsYXNzKCJzZWxlY3RwbGF5ZXIiKTsKCQkJCQl0Z3QxLnBhcmVudCgpLnJlbW92ZUNsYXNzKCJwbGF5ZXIiKTsKCQkJCQl0Z3QxLmh0bWwoYWN0aW9ucy5maWx0ZXIoIjpldmVuIikpOwoJCQkJCXRndDIuaHRtbChhY3Rpb25zLmZpbHRlcigiOm9kZCIpKTsKCQkJCQl0Z3QxLmZhZGVUbygxMjAsMSk7CgkJCQkJdGd0Mi5mYWRlVG8oMTIwLDEpOwoJCQkJCU1haW4udGlwQWxsKCk7CgkJCQkJX2cucm9vbVdvcmtpbmcgPSBmYWxzZTsKCQkJCQlicmVhazsKCQkJCWNhc2UgMjoKCQkJCQl2YXIgdGd0MSA9IEpxRXguaigiI3Jvb21BY3Rpb25MaXN0MSIpOwoJCQkJCXZhciB0Z3QyID0gSnFFeC5qKCIjcm9vbUFjdGlvbkxpc3QyIik7CgkJCQkJdGd0MS5odG1sKCIiKTsKCQkJCQl0Z3QyLmh0bWwoIiIpOwoJCQkJCV9nLnJvb21Xb3JraW5nID0gZmFsc2U7CgkJCQkJYnJlYWs7CgkJCQl9CgkJCX0pOwoJCX0gZWxzZSBudWxsOwoJfQoJLGNoYW5nZUhlcm9MaXN0U3RhdGU6IGZ1bmN0aW9uKHN0KSB7CgkJdmFyIF9nID0gdGhpczsKCQlpZih0aGlzLnJvb21TdGF0ZSAhPSBudWxsICYmIFR5cGUuZW51bUVxKHRoaXMuaGVyb1N0YXRlLHN0KSkgcmV0dXJuOwoJCWlmKHRoaXMuaGVyb1dvcmtpbmcpIHJldHVybjsKCQl0aGlzLmhlcm9Xb3JraW5nID0gdHJ1ZTsKCQlKcUV4LmooIi5jZEFjdGlvbkxpc3QiKS5mYWRlVG8oMTIwLDAsZnVuY3Rpb24oKSB7CgkJCV9nLmNoYW5nZUhlcm9MaXN0U3RhdGUyKHN0KTsKCQl9KTsKCX0KCSxjaGFuZ2VIZXJvTGlzdFN0YXRlMjogZnVuY3Rpb24oc3QpIHsKCQl2YXIgX2cgPSB0aGlzOwoJCXZhciAkZSA9IChzdCk7CgkJc3dpdGNoKCAkZVsxXSApIHsKCQljYXNlIDA6CgkJCXZhciB0Z3QgPSBKcUV4LmooIi5jZEFjdGlvbkxpc3QiKTsKCQkJdmFyIHNyYyA9IEpxRXguaigiLmNkQWN0aW9uUmVwb3NpdG9yeSAuaGVyb1Jvb21BY3Rpb25zIikuY2hpbGRyZW4oKS5jbG9uZSgpOwoJCQl0Z3QuaHRtbChzcmMpOwoJCQlKcUV4LmooIi5jZEFjdGlvbkxpc3QgLm1vdmUiKS5oaWRlKCk7CgkJCWJyZWFrOwoJCWNhc2UgMToKCQkJdmFyIHNlcmlhbCA9ICRlWzJdOwoJCQl2YXIgdGd0ID0gSnFFeC5qKCIuY2RBY3Rpb25MaXN0Iik7CgkJCXZhciBzcmMgPSBKcUV4LmooIi5jZEFjdGlvblJlcG9zaXRvcnkgLmhlcm9TZXJpYWxBY3Rpb25zIik7CgkJCXZhciBhY3Rpb25zID0gc3JjLmNoaWxkcmVuKCJbd2ViZGF0YT0iICsgc2VyaWFsICsgIl0iKS5hZGQoIi5jZEFjdGlvblJlcG9zaXRvcnkgLmhlcm9TZXJpYWxBY3Rpb25zIC5jZFJldHVybkZyb21TZWxCdXR0b24iKS5jbG9uZSgpOwoJCQl0Z3QuaHRtbChhY3Rpb25zKTsKCQkJTWFpbi50aXBBbGwoKTsKCQkJSnFFeC5qKCIuY2RBY3Rpb25MaXN0IC5tb3ZlIikuaGlkZSgpOwoJCQlicmVhazsKCQl9CgkJdGhpcy5oZXJvU3RhdGUgPSBzdDsKCQlKcUV4LmooIi5jZEFjdGlvbkxpc3QiKS5oaWRlKCkuZmFkZVRvKDEyMCwxLGZ1bmN0aW9uKCkgewoJCQlfZy5oZXJvV29ya2luZyA9IGZhbHNlOwoJCX0pOwoJfQoJLF9fY2xhc3NfXzogQWN0aW9uTGlzdE1haW50YWluZXIKfQoKdmFyIEFycmF5RXggPSBmdW5jdGlvbigpIHsgfQokaHhDbGFzc2VzWyJBcnJheUV4Il0gPSBBcnJheUV4OwpBcnJheUV4Ll9fbmFtZV9fID0gWyJBcnJheUV4Il07CkFycmF5RXguc2NyYW1ibGUgPSBmdW5jdGlvbihhcnIpIHsKCXZhciBfZzEgPSAwOwoJdmFyIF9nID0gMyAqIChhcnIubGVuZ3RoICsgU3RkLnJhbmRvbShhcnIubGVuZ3RoKSk7Cgl3aGlsZShfZzEgPCBfZykgewoJCXZhciB4ID0gX2cxKys7CgkJdmFyIGIgPSBTdGQucmFuZG9tKGFyci5sZW5ndGgpOwoJCXZhciBhID0gU3RkLnJhbmRvbShhcnIubGVuZ3RoKTsKCQl2YXIgdGVtcCA9IGFyclthXTsKCQlhcnJbYV0gPSBhcnJbYl07CgkJYXJyW2JdID0gdGVtcDsKCX0KCXJldHVybiBhcnI7Cn0KQXJyYXlFeC5maXJzdCA9IGZ1bmN0aW9uKGFycikgewoJcmV0dXJuIGFyclswXTsKfQpBcnJheUV4Lmxhc3QgPSBmdW5jdGlvbihhcnIpIHsKCXJldHVybiBhcnJbYXJyLmxlbmd0aCAtIDFdOwp9CkFycmF5RXgucmFuZG9tID0gZnVuY3Rpb24oYXJyKSB7CglyZXR1cm4gYXJyW1N0ZC5yYW5kb20oYXJyLmxlbmd0aCldOwp9CkFycmF5RXgucmVzZXJ2ZSA9IGZ1bmN0aW9uKG4pIHsKCXZhciByID0gbmV3IEFycmF5KCk7CglyW25dID0gbnVsbDsKCXJldHVybiByOwp9CkFycmF5RXgucmZpbmQgPSBmdW5jdGlvbihhcnIscHJvYykgewoJdmFyIHJlcyA9IG51bGw7Cgl2YXIgX2cxID0gMDsKCXZhciBfZyA9IGFyci5sZW5ndGg7Cgl3aGlsZShfZzEgPCBfZykgewoJCXZhciBpID0gX2cxKys7CgkJdmFyIGlkeCA9IGFyci5sZW5ndGggLSBpIC0gMTsKCQlpZihwcm9jKGFycltpZHhdKSkgewoJCQlyZXMgPSBhcnJbaWR4XTsKCQkJYnJlYWs7CgkJfQoJfQoJcmV0dXJuIHJlczsKfQpBcnJheUV4LmNsZWFyID0gZnVuY3Rpb24oYXJyKSB7CglhcnIuc3BsaWNlKDAsYXJyLmxlbmd0aCk7Cn0KQXJyYXlFeC5yZW1vdmVCeUluZGV4ID0gZnVuY3Rpb24oYXJyLGkpIHsKCWFyci5zcGxpY2UoaSwxKTsKfQpBcnJheUV4LmVucXVldWUgPSBmdW5jdGlvbihhLGIpIHsKCXZhciAkaXQwID0gJGl0ZXJhdG9yKGIpKCk7Cgl3aGlsZSggJGl0MC5oYXNOZXh0KCkgKSB7CgkJdmFyIHggPSAkaXQwLm5leHQoKTsKCQlhLnB1c2goeCk7Cgl9CglyZXR1cm4gYTsKfQpBcnJheUV4LnN0cmlwID0gZnVuY3Rpb24oYSxmKSB7Cgl2YXIgdG9wID0gYS5sZW5ndGggLSAxOwoJd2hpbGUodG9wID49IDApIHsKCQlpZihmKGFbdG9wXSkpIGEuc3BsaWNlKHRvcCwxKTsKCQl0b3AtLTsKCX0KCXJldHVybiBhOwp9CkFycmF5RXguc3BsYXQgPSBmdW5jdGlvbihhcnIsbmIsZSkgewoJdmFyIF9nID0gMDsKCXdoaWxlKF9nIDwgbmIpIHsKCQl2YXIgaSA9IF9nKys7CgkJYXJyLnB1c2goUmVmbGVjdC5jb3B5KGUpKTsKCX0KCXJldHVybiBhcnI7Cn0KQXJyYXlFeC53cmFwID0gZnVuY3Rpb24oYXJyLHByZSxwb3N0KSB7Cgl2YXIgciA9IFtdOwoJdmFyIF9nID0gMDsKCXdoaWxlKF9nIDwgYXJyLmxlbmd0aCkgewoJCXZhciBrID0gYXJyW19nXTsKCQkrK19nOwoJCXIucHVzaChwcmUgKyBTdGQuc3RyaW5nKGspICsgcG9zdCk7Cgl9CglyZXR1cm4gcjsKfQpBcnJheUV4LmJzZWFyY2ggPSBmdW5jdGlvbihhLGtleSxmKSB7Cgl2YXIgc3QgPSAwOwoJdmFyIG1heCA9IGEubGVuZ3RoOwoJdmFyIGluZGV4ID0gLTE7Cgl3aGlsZShzdCA8IG1heCkgewoJCWluZGV4ID0gc3QgKyBtYXggPj4gMTsKCQl2YXIgdmFsID0gYVtpbmRleF07CgkJdmFyIGNtcCA9IGYoa2V5LHZhbCk7CgkJaWYoY21wIDwgMCkgbWF4ID0gaW5kZXg7IGVsc2UgaWYoY21wID4gMCkgc3QgPSBpbmRleCArIDE7IGVsc2UgcmV0dXJuIHZhbDsKCX0KCXJldHVybiBudWxsOwp9CkFycmF5RXguZXhjZXB0ID0gZnVuY3Rpb24oaXQsZXhjKSB7CglyZXR1cm4gTGFtYmRhLmZpbHRlcihpdCxmdW5jdGlvbihhKSB7CgkJcmV0dXJuICFMYW1iZGEuaGFzKGV4YyxhKTsKCX0pOwp9CkFycmF5RXguZXhjZXB0YSA9IGZ1bmN0aW9uKGl0LGV4YykgewoJcmV0dXJuIExhbWJkYS5hcnJheShBcnJheUV4LmV4Y2VwdChpdCxleGMpKTsKfQpBcnJheUV4LnB1c2hCYWNrID0gZnVuY3Rpb24obCxlKSB7CglsLnB1c2goZSk7CglyZXR1cm4gZTsKfQpBcnJheUV4LnB1c2hGcm9udCA9IGZ1bmN0aW9uKGwsZSkgewoJbC51bnNoaWZ0KGUpOwoJcmV0dXJuIGU7Cn0KQXJyYXlFeC5wYXJ0aXRpb24gPSBmdW5jdGlvbihpdCxwcmVkaWNhdGUpIHsKCXZhciBwID0gbmV3IG10Lmd4LlBhaXIoW10sW10pOwoJdmFyIF9nID0gMDsKCXdoaWxlKF9nIDwgaXQubGVuZ3RoKSB7CgkJdmFyIHggPSBpdFtfZ107CgkJKytfZzsKCQlpZihwcmVkaWNhdGUoeCkpIHAuZmlyc3QucHVzaCh4KTsgZWxzZSBwLnNlY29uZC5wdXNoKHgpOwoJfQoJcmV0dXJuIHA7Cn0KQXJyYXlFeC5yZW1vdmVMYXN0ID0gZnVuY3Rpb24oYXJyKSB7CglhcnIucG9wKCk7Cn0KQXJyYXlFeC5iZXN0ID0gZnVuY3Rpb24oYXJyLGYpIHsKCWlmKGFyci5sZW5ndGggPT0gMCkgcmV0dXJuIG51bGw7IGVsc2UgewoJCXZhciBpID0gMDsKCQl2YXIgaWR4ID0gMDsKCQl2YXIgX2cxID0gMDsKCQl2YXIgX2cgPSBhcnIubGVuZ3RoOwoJCXdoaWxlKF9nMSA8IF9nKSB7CgkJCXZhciBpMSA9IF9nMSsrOwoJCQlpZihmKGFycltpZHhdKSA8IGYoYXJyW2kxXSkpIGlkeCA9IGkxOwoJCX0KCQlyZXR1cm4gYXJyW2ldOwoJfQp9CkFycmF5RXguYmVzdE5aID0gZnVuY3Rpb24oYXJyLGYpIHsKCWlmKGFyci5sZW5ndGggPT0gMCkgcmV0dXJuIG51bGw7IGVsc2UgewoJCXZhciBjdXIgPSBudWxsOwoJCXZhciBpZHggPSBudWxsOwoJCXZhciBfZzEgPSAwOwoJCXZhciBfZyA9IGFyci5sZW5ndGg7CgkJd2hpbGUoX2cxIDwgX2cpIHsKCQkJdmFyIGkgPSBfZzErKzsKCQkJdmFyIG52ID0gZihhcnJbaV0pOwoJCQlpZihudiAhPSAwKSB7CgkJCQlpZihpZHggPT0gbnVsbCkgewoJCQkJCWlkeCA9IGk7CgkJCQkJY3VyID0gZihhcnJbaWR4XSk7CgkJCQl9IGVsc2UgaWYobnYgPiBjdXIpIHsKCQkJCQlpZHggPSBpOwoJCQkJCWN1ciA9IG52OwoJCQkJfQoJCQl9CgkJfQoJCWlmKGlkeCAhPSBudWxsKSByZXR1cm4gYXJyW2lkeF07IGVsc2UgcmV0dXJuIG51bGw7Cgl9Cn0KQXJyYXlFeC53b3JzdE5aID0gZnVuY3Rpb24oYXJyLGYpIHsKCWlmKGFyci5sZW5ndGggPT0gMCkgcmV0dXJuIG51bGw7IGVsc2UgewoJCXZhciBpID0gMDsKCQl2YXIgY3VyID0gMDsKCQl2YXIgaWR4ID0gbnVsbDsKCQl2YXIgX2cxID0gMDsKCQl2YXIgX2cgPSBhcnIubGVuZ3RoOwoJCXdoaWxlKF9nMSA8IF9nKSB7CgkJCXZhciBpMSA9IF9nMSsrOwoJCQl2YXIgbnYgPSBmKGFycltpMV0pOwoJCQlpZihudiAhPSAwKSB7CgkJCQlpZihpZHggPT0gbnVsbCkgewoJCQkJCWlkeCA9IDA7CgkJCQkJY3VyID0gZihhcnJbaWR4XSk7CgkJCQl9IGVsc2UgaWYobnYgPCBjdXIpIHsKCQkJCQlpZHggPSBpMTsKCQkJCQljdXIgPSBudjsKCQkJCX0KCQkJfQoJCX0KCQlpZihpZHggIT0gbnVsbCkgcmV0dXJuIGFycltpZHhdOyBlbHNlIHJldHVybiBudWxsOwoJfQp9CkFycmF5RXgud29yc3QgPSBmdW5jdGlvbihhcnIsZikgewoJaWYoYXJyLmxlbmd0aCA9PSAwKSByZXR1cm4gbnVsbDsgZWxzZSB7CgkJdmFyIGkgPSAwOwoJCXZhciBpZHggPSAwOwoJCXZhciBfZzEgPSAxOwoJCXZhciBfZyA9IGFyci5sZW5ndGg7CgkJd2hpbGUoX2cxIDwgX2cpIHsKCQkJdmFyIGkxID0gX2cxKys7CgkJCWlmKGYoYXJyW2lkeF0pID4gZihhcnJbaTFdKSkgaWR4ID0gaTE7CgkJfQoJCXJldHVybiBhcnJbaV07Cgl9Cn0KQXJyYXlFeC5yZW1vdmVBbGwgPSBmdW5jdGlvbihhLGYpIHsKCXZhciBfZyA9IDA7Cgl2YXIgX2cxID0gYS5zbGljZSgpOwoJd2hpbGUoX2cgPCBfZzEubGVuZ3RoKSB7CgkJdmFyIGQgPSBfZzFbX2ddOwoJCSsrX2c7CgkJaWYoZihkKSkgSHhPdmVycmlkZXMucmVtb3ZlKGEsZCk7Cgl9Cn0KdmFyIENoYXRUeXBlID0gJGh4Q2xhc3Nlc1siQ2hhdFR5cGUiXSA9IHsgX19lbmFtZV9fIDogWyJDaGF0VHlwZSJdLCBfX2NvbnN0cnVjdHNfXyA6IFsiTG9jYWwiLCJfQ2VudHJhbCIsIk11c2giLCJfQWxlcnQiLCJPYmplY3RpdmVzIiwiV2FsbCIsIkZhdldhbGwiLCJQcml2YXRlMCIsIlByaXZhdGUxIiwiUHJpdmF0ZTIiXSB9CkNoYXRUeXBlLkxvY2FsID0gWyJMb2NhbCIsMF07CkNoYXRUeXBlLkxvY2FsLnRvU3RyaW5nID0gJGVzdHI7CkNoYXRUeXBlLkxvY2FsLl9fZW51bV9fID0gQ2hhdFR5cGU7CkNoYXRUeXBlLl9DZW50cmFsID0gWyJfQ2VudHJhbCIsMV07CkNoYXRUeXBlLl9DZW50cmFsLnRvU3RyaW5nID0gJGVzdHI7CkNoYXRUeXBlLl9DZW50cmFsLl9fZW51bV9fID0gQ2hhdFR5cGU7CkNoYXRUeXBlLk11c2ggPSBbIk11c2giLDJdOwpDaGF0VHlwZS5NdXNoLnRvU3RyaW5nID0gJGVzdHI7CkNoYXRUeXBlLk11c2guX19lbnVtX18gPSBDaGF0VHlwZTsKQ2hhdFR5cGUuX0FsZXJ0ID0gWyJfQWxlcnQiLDNdOwpDaGF0VHlwZS5fQWxlcnQudG9TdHJpbmcgPSAkZXN0cjsKQ2hhdFR5cGUuX0FsZXJ0Ll9fZW51bV9fID0gQ2hhdFR5cGU7CkNoYXRUeXBlLk9iamVjdGl2ZXMgPSBbIk9iamVjdGl2ZXMiLDRdOwpDaGF0VHlwZS5PYmplY3RpdmVzLnRvU3RyaW5nID0gJGVzdHI7CkNoYXRUeXBlLk9iamVjdGl2ZXMuX19lbnVtX18gPSBDaGF0VHlwZTsKQ2hhdFR5cGUuV2FsbCA9IFsiV2FsbCIsNV07CkNoYXRUeXBlLldhbGwudG9TdHJpbmcgPSAkZXN0cjsKQ2hhdFR5cGUuV2FsbC5fX2VudW1fXyA9IENoYXRUeXBlOwpDaGF0VHlwZS5GYXZXYWxsID0gWyJGYXZXYWxsIiw2XTsKQ2hhdFR5cGUuRmF2V2FsbC50b1N0cmluZyA9ICRlc3RyOwpDaGF0VHlwZS5GYXZXYWxsLl9fZW51bV9fID0gQ2hhdFR5cGU7CkNoYXRUeXBlLlByaXZhdGUwID0gWyJQcml2YXRlMCIsN107CkNoYXRUeXBlLlByaXZhdGUwLnRvU3RyaW5nID0gJGVzdHI7CkNoYXRUeXBlLlByaXZhdGUwLl9fZW51bV9fID0gQ2hhdFR5cGU7CkNoYXRUeXBlLlByaXZhdGUxID0gWyJQcml2YXRlMSIsOF07CkNoYXRUeXBlLlByaXZhdGUxLnRvU3RyaW5nID0gJGVzdHI7CkNoYXRUeXBlLlByaXZhdGUxLl9fZW51bV9fID0gQ2hhdFR5cGU7CkNoYXRUeXBlLlByaXZhdGUyID0gWyJQcml2YXRlMiIsOV07CkNoYXRUeXBlLlByaXZhdGUyLnRvU3RyaW5nID0gJGVzdHI7CkNoYXRUeXBlLlByaXZhdGUyLl9fZW51bV9fID0gQ2hhdFR5cGU7CgptdC5neCA9IHt9Cm10Lmd4LlBhaXIgPSBmdW5jdGlvbihhLGIpIHsKCXRoaXMuZmlyc3QgPSBhOwoJdGhpcy5zZWNvbmQgPSBiOwp9OwoKdmFyIFRhZyA9IGZ1bmN0aW9uKG4pIHsKCXRoaXMubmFtZSA9IG47Cgl0aGlzLmNoaWxkcmVuID0gbmV3IExpc3QoKTsKCXRoaXMuYXR0ID0gbmV3IEFycmF5KCk7Cn07CiRoeENsYXNzZXNbIlRhZyJdID0gVGFnOwpUYWcuX19uYW1lX18gPSBbIlRhZyJdOwpUYWcuYXR0cjJIdG1sID0gZnVuY3Rpb24ocykgewoJdmFyIGwgPSBzOwoJdmFyICRpdDAgPSBUYWcuaGFzaDJBdHRyLmtleXMoKTsKCXdoaWxlKCAkaXQwLmhhc05leHQoKSApIHsKCQl2YXIgayA9ICRpdDAubmV4dCgpOwoJCWwgPSBsLnNwbGl0KGspLmpvaW4oVGFnLmhhc2gyQXR0ci5nZXQoaykpOwoJfQoJcmV0dXJuIGw7Cn0KdmFyIENsaWVudHMgPSAkaHhDbGFzc2VzWyJDbGllbnRzIl0gPSB7IF9fZW5hbWVfXyA6IFsiQ2xpZW50cyJdLCBfX2NvbnN0cnVjdHNfXyA6IFsiSVNPX01PRFVMRSJdIH0KQ2xpZW50cy5JU09fTU9EVUxFID0gWyJJU09fTU9EVUxFIiwwXTsKQ2xpZW50cy5JU09fTU9EVUxFLnRvU3RyaW5nID0gJGVzdHI7CkNsaWVudHMuSVNPX01PRFVMRS5fX2VudW1fXyA9IENsaWVudHM7CgpUYWcucHJvdG90eXBlID0gewoJY3NzOiBmdW5jdGlvbihuLHYpIHsKCQl0aGlzLmF0dC5wdXNoKG5ldyBtdC5neC5QYWlyKCJzdHlsZSIsIiIgKyBuICsgIjoiICsgdiArICI7IikpOwoJfQoJLGF0dHI6IGZ1bmN0aW9uKG4sYykgewoJCXRoaXMuYXR0LnB1c2gobmV3IG10Lmd4LlBhaXIobixjKSk7CgkJcmV0dXJuIHRoaXM7Cgl9CgksY2xvbmU6IGZ1bmN0aW9uKCkgewoJCXZhciBjbCA9IG5ldyBUYWcodGhpcy5uYW1lKTsKCQljbC5jaGlsZHJlbiA9IHRoaXMuY2hpbGRyZW4ubWFwKGZ1bmN0aW9uKGUpIHsKCQkJc3dpdGNoKGVbMV0pIHsKCQkJY2FzZSAwOgoJCQkJdmFyIHMgPSBlWzJdOwoJCQkJcmV0dXJuIFRhZ0VsZW0uVHh0KHMpOwoJCQljYXNlIDE6CgkJCQl2YXIgdCA9IGVbMl07CgkJCQlyZXR1cm4gVGFnRWxlbS5UZyh0LmNsb25lKCkpOwoJCQl9CgkJfSk7CgkJY2wuYXR0ID0gTGFtYmRhLmZvbGQodGhpcy5hdHQsZnVuY3Rpb24ocCxyKSB7CgkJCXIucHVzaChuZXcgbXQuZ3guUGFpcihwLmZpcnN0LHAuc2Vjb25kKSk7CgkJCXJldHVybiByOwoJCX0sW10pOwoJCXJldHVybiBjbDsKCX0KCSxjb250ZW50OiBmdW5jdGlvbihzdHIpIHsKCQl0aGlzLmNoaWxkcmVuLmFkZChUYWdFbGVtLlR4dChzdHIpKTsKCQlyZXR1cm4gdGhpczsKCX0KCSxhcHBlbmQ6IGZ1bmN0aW9uKHRnKSB7CgkJdGhpcy5jaGlsZHJlbi5hZGQoVGFnRWxlbS5UZyh0ZykpOwoJCXJldHVybiB0aGlzOwoJfQoJLGZvcm1hdDogZnVuY3Rpb24oYykgewoJCXRoaXMubmFtZSA9IFN0ZEV4LmZvcm1hdCh0aGlzLm5hbWUsYyk7CgkJdGhpcy5jaGlsZHJlbiA9IHRoaXMuY2hpbGRyZW4ubWFwKGZ1bmN0aW9uKGUpIHsKCQkJc3dpdGNoKGVbMV0pIHsKCQkJY2FzZSAwOgoJCQkJdmFyIHMgPSBlWzJdOwoJCQkJcmV0dXJuIFRhZ0VsZW0uVHh0KFN0ZEV4LmZvcm1hdChzLGMpKTsKCQkJY2FzZSAxOgoJCQkJdmFyIHQgPSBlWzJdOwoJCQkJdC5mb3JtYXQoYyk7CgkJCQlyZXR1cm4gVGFnRWxlbS5UZyh0KTsKCQkJfQoJCX0pOwoJCXZhciBfZyA9IDA7CgkJdmFyIF9nMSA9IHRoaXMuYXR0OwoJCXdoaWxlKF9nIDwgX2cxLmxlbmd0aCkgewoJCQl2YXIgcCA9IF9nMVtfZ107CgkJCSsrX2c7CgkJCXAuc2Vjb25kID0gU3RkRXguZm9ybWF0KHAuc2Vjb25kKTsKCQl9Cgl9CgksdG9TdHJpbmc6IGZ1bmN0aW9uKCkgewoJCXZhciBfZyA9IHRoaXM7CgkJdmFyIGxpc3RBdHRyID0gZnVuY3Rpb24oKSB7CgkJCXZhciBzID0gIiAiOwoJCQl2YXIgX2cxID0gMDsKCQkJdmFyIF9nMiA9IF9nLmF0dDsKCQkJd2hpbGUoX2cxIDwgX2cyLmxlbmd0aCkgewoJCQkJdmFyIHAgPSBfZzJbX2cxXTsKCQkJCSsrX2cxOwoJCQkJcyArPSAiICIgKyBwLmZpcnN0ICsgIiA9XCIiICsgcC5zZWNvbmQgKyAiXCIgIjsKCQkJfQoJCQlyZXR1cm4gczsKCQl9OwoJCXZhciBzOwoJCXMgPSAiPCIgKyB0aGlzLm5hbWUgKyAiICIgKyBsaXN0QXR0cigpICsgKHRoaXMuY2hpbGRyZW4ubGVuZ3RoID4gMD8iPiI6Ii8+Iik7CgkJdmFyICRpdDAgPSB0aGlzLmNoaWxkcmVuLml0ZXJhdG9yKCk7CgkJd2hpbGUoICRpdDAuaGFzTmV4dCgpICkgewoJCQl2YXIgYyA9ICRpdDAubmV4dCgpOwoJCQlzd2l0Y2goY1sxXSkgewoJCQljYXNlIDE6CgkJCQl2YXIgdGcgPSBjWzJdOwoJCQkJcyArPSB0Zy50b1N0cmluZygpOwoJCQkJYnJlYWs7CgkJCWNhc2UgMDoKCQkJCXZhciB0ID0gY1syXTsKCQkJCXMgKz0gdDsKCQkJCWJyZWFrOwoJCQl9CgkJfQoJCWlmKHRoaXMuY2hpbGRyZW4ubGVuZ3RoID4gMCkgcyArPSAiPC8iICsgdGhpcy5uYW1lICsgIj4iOwoJCXJldHVybiBzOwoJfQoJLGh0bWxFc2NhcGVFeDogZnVuY3Rpb24ocykgewoJCXZhciBsID0gczsKCQl2YXIgJGl0MCA9IFRhZy5lc2NhcGVIYXNoLmtleXMoKTsKCQl3aGlsZSggJGl0MC5oYXNOZXh0KCkgKSB7CgkJCXZhciBrID0gJGl0MC5uZXh0KCk7CgkJCWwgPSBsLnNwbGl0KGspLmpvaW4oVGFnLmVzY2FwZUhhc2guZ2V0KGspKTsKCQl9CgkJcmV0dXJuIFN0cmluZ1Rvb2xzLmh0bWxFc2NhcGUobCk7Cgl9CgksdGlwOiBmdW5jdGlvbih0aXRsZSxib2R5KSB7CgkJaWYoYm9keSA9PSBudWxsKSBib2R5ID0gIiI7CgkJdGhpcy5hdHRyKCJvbm1vdXNlb3ZlciIsIk1haW4uc2hvd1RpcCh0aGlzLCIgKyAiJzxkaXYgY2xhc3M9XFwndGlwdG9wXFwnID4iICsgIjxkaXYgY2xhc3M9XFwndGlwYm90dG9tXFwnPiIgKyAiPGRpdiBjbGFzcz1cXCd0aXBiZ1xcJz4iICsgIjxkaXYgY2xhc3M9XFwndGlwY29udGVudFxcJz4iICsgIjxoMT4iICsgVGFnLmF0dHIySHRtbCh0aXRsZSkgKyAiPC9oMT4iICsgVGFnLmF0dHIySHRtbChib2R5KSArICI8L2Rpdj4iICsgIjwvZGl2PiIgKyAiPC9kaXY+IiArICI8L2Rpdj4nKSIpOwoJCXRoaXMuYXR0cigib25tb3VzZW91dCIsIk1haW4uaGlkZVRpcCgpIik7CgkJcmV0dXJuIHRoaXM7Cgl9CgksX19jbGFzc19fOiBUYWcKfQp2YXIgUmVmbGVjdCA9IGZ1bmN0aW9uKCkgeyB9CiRoeENsYXNzZXNbIlJlZmxlY3QiXSA9IFJlZmxlY3Q7ClJlZmxlY3QuX19uYW1lX18gPSBbIlJlZmxlY3QiXTsKUmVmbGVjdC5oYXNGaWVsZCA9IGZ1bmN0aW9uKG8sZmllbGQpIHsKCXJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobyxmaWVsZCk7Cn0KUmVmbGVjdC5maWVsZHMgPSBmdW5jdGlvbihvKSB7Cgl2YXIgYSA9IFtdOwoJaWYobyAhPSBudWxsKSB7CgkJdmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTsKCQlmb3IoIHZhciBmIGluIG8gKSB7CgkJaWYoZiAhPSAiX19pZF9fIiAmJiBmICE9ICJoeF9fY2xvc3VyZXNfXyIgJiYgaGFzT3duUHJvcGVydHkuY2FsbChvLGYpKSBhLnB1c2goZik7CgkJfQoJfQoJcmV0dXJuIGE7Cn0KUmVmbGVjdC5pc0Z1bmN0aW9uID0gZnVuY3Rpb24oZikgewoJcmV0dXJuIHR5cGVvZihmKSA9PSAiZnVuY3Rpb24iICYmICEoZi5fX25hbWVfXyB8fCBmLl9fZW5hbWVfXyk7Cn0KUmVmbGVjdC5jb21wYXJlID0gZnVuY3Rpb24oYSxiKSB7CglpZihhID09IGIpIHJldHVybiAwOyBlbHNlIGlmKGEgPiBiKSByZXR1cm4gMTsgZWxzZSByZXR1cm4gLTE7Cn0KUmVmbGVjdC5pc0VudW1WYWx1ZSA9IGZ1bmN0aW9uKHYpIHsKCXJldHVybiB2ICE9IG51bGwgJiYgdi5fX2VudW1fXyAhPSBudWxsOwp9ClJlZmxlY3QuZGVsZXRlRmllbGQgPSBmdW5jdGlvbihvLGZpZWxkKSB7CglpZighUmVmbGVjdC5oYXNGaWVsZChvLGZpZWxkKSkgcmV0dXJuIGZhbHNlOwoJZGVsZXRlKG9bZmllbGRdKTsKCXJldHVybiB0cnVlOwp9ClJlZmxlY3QuY29weSA9IGZ1bmN0aW9uKG8pIHsKCXZhciBvMiA9IHsgfTsKCXZhciBfZyA9IDA7Cgl2YXIgX2cxID0gUmVmbGVjdC5maWVsZHMobyk7Cgl3aGlsZShfZyA8IF9nMS5sZW5ndGgpIHsKCQl2YXIgZiA9IF9nMVtfZ107CgkJKytfZzsKCQl2YXIgdmFsdWU7CgkJdmFyIHYgPSBudWxsOwoJCXRyeSB7CgkJCXYgPSBvW2ZdOwoJCX0gY2F0Y2goIGUgKSB7CgkJfQoJCXZhbHVlID0gdjsKCQlvMltmXSA9IHZhbHVlOwoJfQoJcmV0dXJuIG8yOwp9CgpmdW5jdGlvbiAkaHhFeHBvc2Uoc3JjLCBwYXRoKSB7Cgl2YXIgbyA9IHR5cGVvZiB3aW5kb3cgIT0gInVuZGVmaW5lZCIgPyB3aW5kb3cgOiBleHBvcnRzOwoJdmFyIHBhcnRzID0gcGF0aC5zcGxpdCgiLiIpOwoJZm9yKHZhciBpaSA9IDA7IGlpIDwgcGFydHMubGVuZ3RoLTE7ICsraWkpIHsKCQl2YXIgcCA9IHBhcnRzW2lpXTsKCQlpZih0eXBlb2Ygb1twXSA9PSAidW5kZWZpbmVkIikgb1twXSA9IHt9OwoJCW8gPSBvW3BdOwoJfQoJb1twYXJ0c1twYXJ0cy5sZW5ndGgtMV1dID0gc3JjOwp9Cgp2YXIgU3RkID0gZnVuY3Rpb24oKSB7IH07CiRoeENsYXNzZXNbIlN0ZCJdID0gU3RkOwpTdGQuX19uYW1lX18gPSBbIlN0ZCJdOwpTdGQuc3RyaW5nID0gZnVuY3Rpb24ocykgewoJcmV0dXJuIGpzLkJvb3QuX19zdHJpbmdfcmVjKHMsIiIpOwp9OwpTdGQuaW50ID0gZnVuY3Rpb24oeCkgewoJcmV0dXJuIHggfCAwOwp9OwpTdGQucGFyc2VJbnQgPSBmdW5jdGlvbih4KSB7Cgl2YXIgdiA9IHBhcnNlSW50KHgsMTApOwoJaWYodiA9PSAwICYmIChIeE92ZXJyaWRlcy5jY2EoeCwxKSA9PSAxMjAgfHwgSHhPdmVycmlkZXMuY2NhKHgsMSkgPT0gODgpKSB2ID0gcGFyc2VJbnQoeCk7CglpZihpc05hTih2KSkgcmV0dXJuIG51bGw7CglyZXR1cm4gdjsKfTsKU3RkLnBhcnNlRmxvYXQgPSBmdW5jdGlvbih4KSB7CglyZXR1cm4gcGFyc2VGbG9hdCh4KTsKfTsKU3RkLnJhbmRvbSA9IGZ1bmN0aW9uKHgpIHsKCWlmKHggPD0gMCkgcmV0dXJuIDA7IGVsc2UgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHgpOwp9Owpqcy5Cb290ID0gZnVuY3Rpb24oKSB7IH07CiRoeENsYXNzZXNbImpzLkJvb3QiXSA9IGpzLkJvb3Q7CmpzLkJvb3QuX19uYW1lX18gPSBbImpzIiwiQm9vdCJdOwpqcy5Cb290Ll9fdW5odG1sID0gZnVuY3Rpb24ocykgewoJcmV0dXJuIHMuc3BsaXQoIiYiKS5qb2luKCImYW1wOyIpLnNwbGl0KCI8Iikuam9pbigiJmx0OyIpLnNwbGl0KCI+Iikuam9pbigiJmd0OyIpOwp9Owpqcy5Cb290Ll9fdHJhY2UgPSBmdW5jdGlvbih2LGkpIHsKCXZhciBtc2c7CglpZihpICE9IG51bGwpIG1zZyA9IGkuZmlsZU5hbWUgKyAiOiIgKyBpLmxpbmVOdW1iZXIgKyAiOiAiOyBlbHNlIG1zZyA9ICIiOwoJbXNnICs9IGpzLkJvb3QuX19zdHJpbmdfcmVjKHYsIiIpOwoJaWYoaSAhPSBudWxsICYmIGkuY3VzdG9tUGFyYW1zICE9IG51bGwpIHsKCQl2YXIgX2cgPSAwOwoJCXZhciBfZzEgPSBpLmN1c3RvbVBhcmFtczsKCQl3aGlsZShfZyA8IF9nMS5sZW5ndGgpIHsKCQkJdmFyIHYxID0gX2cxW19nXTsKCQkJKytfZzsKCQkJbXNnICs9ICIsIiArIGpzLkJvb3QuX19zdHJpbmdfcmVjKHYxLCIiKTsKCQl9Cgl9Cgl2YXIgZDsKCWlmKHR5cGVvZihkb2N1bWVudCkgIT0gInVuZGVmaW5lZCIgJiYgKGQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiaGF4ZTp0cmFjZSIpKSAhPSBudWxsKSBkLmlubmVySFRNTCArPSBqcy5Cb290Ll9fdW5odG1sKG1zZykgKyAiPGJyLz4iOyBlbHNlIGlmKHR5cGVvZiBjb25zb2xlICE9ICJ1bmRlZmluZWQiICYmIGNvbnNvbGUubG9nICE9IG51bGwpIGNvbnNvbGUubG9nKG1zZyk7Cn07CmpzLkJvb3QuX19zdHJpbmdfcmVjID0gZnVuY3Rpb24obyxzKSB7CglpZihvID09IG51bGwpIHJldHVybiAibnVsbCI7CglpZihzLmxlbmd0aCA+PSA1KSByZXR1cm4gIjwuLi4+IjsKCXZhciB0ID0gdHlwZW9mKG8pOwoJaWYodCA9PSAiZnVuY3Rpb24iICYmIChvLl9fbmFtZV9fIHx8IG8uX19lbmFtZV9fKSkgdCA9ICJvYmplY3QiOwoJc3dpdGNoKHQpIHsKCWNhc2UgIm9iamVjdCI6CgkJaWYobyBpbnN0YW5jZW9mIEFycmF5KSB7CgkJCWlmKG8uX19lbnVtX18pIHsKCQkJCWlmKG8ubGVuZ3RoID09IDIpIHJldHVybiBvWzBdOwoJCQkJdmFyIHN0ciA9IG9bMF0gKyAiKCI7CgkJCQlzICs9ICJcdCI7CgkJCQl2YXIgX2cxID0gMjsKCQkJCXZhciBfZyA9IG8ubGVuZ3RoOwoJCQkJd2hpbGUoX2cxIDwgX2cpIHsKCQkJCQl2YXIgaSA9IF9nMSsrOwoJCQkJCWlmKGkgIT0gMikgc3RyICs9ICIsIiArIGpzLkJvb3QuX19zdHJpbmdfcmVjKG9baV0scyk7IGVsc2Ugc3RyICs9IGpzLkJvb3QuX19zdHJpbmdfcmVjKG9baV0scyk7CgkJCQl9CgkJCQlyZXR1cm4gc3RyICsgIikiOwoJCQl9CgkJCXZhciBsID0gby5sZW5ndGg7CgkJCXZhciBpMTsKCQkJdmFyIHN0cjEgPSAiWyI7CgkJCXMgKz0gIlx0IjsKCQkJdmFyIF9nMiA9IDA7CgkJCXdoaWxlKF9nMiA8IGwpIHsKCQkJCXZhciBpMiA9IF9nMisrOwoJCQkJc3RyMSArPSAoaTIgPiAwPyIsIjoiIikgKyBqcy5Cb290Ll9fc3RyaW5nX3JlYyhvW2kyXSxzKTsKCQkJfQoJCQlzdHIxICs9ICJdIjsKCQkJcmV0dXJuIHN0cjE7CgkJfQoJCXZhciB0b3N0cjsKCQl0cnkgewoJCQl0b3N0ciA9IG8udG9TdHJpbmc7CgkJfSBjYXRjaCggZSApIHsKCQkJcmV0dXJuICI/Pz8iOwoJCX0KCQlpZih0b3N0ciAhPSBudWxsICYmIHRvc3RyICE9IE9iamVjdC50b1N0cmluZykgewoJCQl2YXIgczIgPSBvLnRvU3RyaW5nKCk7CgkJCWlmKHMyICE9ICJbb2JqZWN0IE9iamVjdF0iKSByZXR1cm4gczI7CgkJfQoJCXZhciBrID0gbnVsbDsKCQl2YXIgc3RyMiA9ICJ7XG4iOwoJCXMgKz0gIlx0IjsKCQl2YXIgaGFzcCA9IG8uaGFzT3duUHJvcGVydHkgIT0gbnVsbDsKCQlmb3IoIHZhciBrIGluIG8gKSB7CgkJaWYoaGFzcCAmJiAhby5oYXNPd25Qcm9wZXJ0eShrKSkgewoJCQljb250aW51ZTsKCQl9CgkJaWYoayA9PSAicHJvdG90eXBlIiB8fCBrID09ICJfX2NsYXNzX18iIHx8IGsgPT0gIl9fc3VwZXJfXyIgfHwgayA9PSAiX19pbnRlcmZhY2VzX18iIHx8IGsgPT0gIl9fcHJvcGVydGllc19fIikgewoJCQljb250aW51ZTsKCQl9CgkJaWYoc3RyMi5sZW5ndGggIT0gMikgc3RyMiArPSAiLCBcbiI7CgkJc3RyMiArPSBzICsgayArICIgOiAiICsganMuQm9vdC5fX3N0cmluZ19yZWMob1trXSxzKTsKCQl9CgkJcyA9IHMuc3Vic3RyaW5nKDEpOwoJCXN0cjIgKz0gIlxuIiArIHMgKyAifSI7CgkJcmV0dXJuIHN0cjI7CgljYXNlICJmdW5jdGlvbiI6CgkJcmV0dXJuICI8ZnVuY3Rpb24+IjsKCWNhc2UgInN0cmluZyI6CgkJcmV0dXJuIG87CglkZWZhdWx0OgoJCXJldHVybiBTdHJpbmcobyk7Cgl9Cn07CmhheGUuTG9nID0gZnVuY3Rpb24oKSB7IH07CiRoeENsYXNzZXNbImhheGUuTG9nIl0gPSBoYXhlLkxvZzsKaGF4ZS5Mb2cuX19uYW1lX18gPSBbImhheGUiLCJMb2ciXTsKaGF4ZS5Mb2cudHJhY2UgPSBmdW5jdGlvbih2LGluZm9zKSB7Cglqcy5Cb290Ll9fdHJhY2UodixpbmZvcyk7Cn07"},{"meta":{"name":"ctrl-w.po","url":"https://raw.github.com/badconker/ctrl-w/release/translations/fr/LC_MESSAGES/ctrl-w.po","ts":1544430112976,"mimetype":"text/plain"},"source":""},{"meta":{"name":"jquery.jgrowl.css","url":"https://raw.github.com/badconker/ctrl-w/release/lib/jquery.jgrowl.css","ts":1544430112989,"mimetype":"text/css"},"source":"Ci8qKiBTcGVjaWFsIElFNiBTdHlsZSBQb3NpdGlvbmluZyAqKi8KLmllNiB7Cglwb3NpdGlvbjogCQkJYWJzb2x1dGU7Cn0KCi5pZTYudG9wLXJpZ2h0IHsKCXJpZ2h0OiAJCQkJYXV0bzsKCWJvdHRvbTogCQkJYXV0bzsKCWxlZnQ6IAkJCQlleHByZXNzaW9uKCAoIDAgLSBqR3Jvd2wub2Zmc2V0V2lkdGggKyAoIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aCA/IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aCA6IGRvY3VtZW50LmJvZHkuY2xpZW50V2lkdGggKSArICggaWdub3JlTWUyID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbExlZnQgPyBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsTGVmdCA6IGRvY3VtZW50LmJvZHkuc2Nyb2xsTGVmdCApICkgKyAncHgnICk7Cgl0b3A6IAkJCQlleHByZXNzaW9uKCAoIDAgKyAoIGlnbm9yZU1lID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCA/IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3AgOiBkb2N1bWVudC5ib2R5LnNjcm9sbFRvcCApICkgKyAncHgnICk7Cn0KCi5pZTYudG9wLWxlZnQgewoJbGVmdDogCQkJCWV4cHJlc3Npb24oICggMCArICggaWdub3JlTWUyID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbExlZnQgPyBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsTGVmdCA6IGRvY3VtZW50LmJvZHkuc2Nyb2xsTGVmdCApICkgKyAncHgnICk7Cgl0b3A6IAkJCQlleHByZXNzaW9uKCAoIDAgKyAoIGlnbm9yZU1lID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCA/IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3AgOiBkb2N1bWVudC5ib2R5LnNjcm9sbFRvcCApICkgKyAncHgnICk7Cn0KCi5pZTYuYm90dG9tLXJpZ2h0IHsKCWxlZnQ6IAkJCQlleHByZXNzaW9uKCAoIDAgLSBqR3Jvd2wub2Zmc2V0V2lkdGggKyAoIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aCA/IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aCA6IGRvY3VtZW50LmJvZHkuY2xpZW50V2lkdGggKSArICggaWdub3JlTWUyID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbExlZnQgPyBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsTGVmdCA6IGRvY3VtZW50LmJvZHkuc2Nyb2xsTGVmdCApICkgKyAncHgnICk7Cgl0b3A6IAkJCQlleHByZXNzaW9uKCAoIDAgLSBqR3Jvd2wub2Zmc2V0SGVpZ2h0ICsgKCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0ID8gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodCA6IGRvY3VtZW50LmJvZHkuY2xpZW50SGVpZ2h0ICkgKyAoIGlnbm9yZU1lID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCA/IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3AgOiBkb2N1bWVudC5ib2R5LnNjcm9sbFRvcCApICkgKyAncHgnICk7Cn0KCi5pZTYuYm90dG9tLWxlZnQgewoJbGVmdDogCQkJCWV4cHJlc3Npb24oICggMCArICggaWdub3JlTWUyID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbExlZnQgPyBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsTGVmdCA6IGRvY3VtZW50LmJvZHkuc2Nyb2xsTGVmdCApICkgKyAncHgnICk7Cgl0b3A6IAkJCQlleHByZXNzaW9uKCAoIDAgLSBqR3Jvd2wub2Zmc2V0SGVpZ2h0ICsgKCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0ID8gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodCA6IGRvY3VtZW50LmJvZHkuY2xpZW50SGVpZ2h0ICkgKyAoIGlnbm9yZU1lID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCA/IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3AgOiBkb2N1bWVudC5ib2R5LnNjcm9sbFRvcCApICkgKyAncHgnICk7Cn0KCi5pZTYuY2VudGVyIHsKCWxlZnQ6IAkJCQlleHByZXNzaW9uKCAoIDAgKyAoIGlnbm9yZU1lMiA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxMZWZ0ID8gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbExlZnQgOiBkb2N1bWVudC5ib2R5LnNjcm9sbExlZnQgKSApICsgJ3B4JyApOwoJdG9wOiAJCQkJZXhwcmVzc2lvbiggKCAwICsgKCBpZ25vcmVNZSA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3AgPyBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wIDogZG9jdW1lbnQuYm9keS5zY3JvbGxUb3AgKSApICsgJ3B4JyApOwoJd2lkdGg6IAkJCQkxMDAlOwp9CgoKLyoqIGpHcm93bCBTdHlsaW5nICoqLwouakdyb3dsIHsKCXotaW5kZXg6IAkJCTk5OTk7Cgljb2xvcjogCQkJCSNmZmY7Cglmb250LXNpemU6IAkJCTEycHg7Cglwb3NpdGlvbjoJCQlmaXhlZDsKfQoKLmpHcm93bC50b3AtbGVmdCB7CglsZWZ0OiAJCQkJMHB4OwoJdG9wOiAJCQkJMHB4Owp9Cgouakdyb3dsLnRvcC1yaWdodCB7CglyaWdodDogCQkJCTBweDsKCXRvcDogCQkJCTMwcHg7Cn0KCi5qR3Jvd2wuYm90dG9tLWxlZnQgewoJbGVmdDogCQkJCTBweDsKCWJvdHRvbToJCQkJMHB4Owp9Cgouakdyb3dsLmJvdHRvbS1yaWdodCB7CglyaWdodDogCQkJCTBweDsKCWJvdHRvbTogCQkJMHB4Owp9Cgouakdyb3dsLmNlbnRlciB7Cgl0b3A6IAkJCQkwcHg7Cgl3aWR0aDogCQkJCTUwJTsKCWxlZnQ6IAkJCQkyNSU7Cn0KCi8qKiBDcm9zcyBCcm93c2VyIFN0eWxpbmcgKiovCi5jZW50ZXIgLmpHcm93bC1ub3RpZmljYXRpb24sIC5jZW50ZXIgLmpHcm93bC1jbG9zZXIgewoJbWFyZ2luLWxlZnQ6IAkJYXV0bzsKCW1hcmdpbi1yaWdodDogCQlhdXRvOwp9Cgouakdyb3dsIC5qR3Jvd2wtbm90aWZpY2F0aW9uLCAuakdyb3dsIC5qR3Jvd2wtY2xvc2VyIHsKCWJhY2tncm91bmQtY29sb3I6IAkJcmdiYSg1Myw1NSwxMTIsMC42KTsKCWJvcmRlcjogMnB4IHNvbGlkICMzOTY1RkI7CgktbXMtZmlsdGVyOiAJCQkicHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LkFscGhhKE9wYWNpdHk9ODUpIjsgCglmaWx0ZXI6IAkJCQlwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuQWxwaGEoT3BhY2l0eT04NSk7IAoJem9vbTogCQkJCQkxOwoJd2lkdGg6IAkJCQkJMjM1cHg7CglwYWRkaW5nOiAJCQkJMTBweDsKCW1hcmdpbi10b3A6IAkJCTVweDsKCW1hcmdpbi1ib3R0b206IAkJCTVweDsKCWZvbnQtZmFtaWx5OiAJCQlUYWhvbWEsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7Cglmb250LXNpemU6IAkJCQkxZW07Cgl0ZXh0LWFsaWduOiAJCQlsZWZ0OwoJZGlzcGxheTogCQkJCW5vbmU7Cgktd2Via2l0LWJveC1zaGFkb3c6IGluc2V0IDAgMCA4cHggMnB4IHJnYmEoNTcsMTAxLDI1MSwxKTsKCS1tb3otYm94LXNoYWRvdzogaW5zZXQgMCAwIDhweCAycHggcmdiYSg1NywxMDEsMjUxLDEpOwoJYm94LXNoYWRvdzogaW5zZXQgMCAwIDhweCAycHggcmdiYSg1NywxMDEsMjUxLDEpOwp9Ci5qR3Jvd2wtbWVzc2FnZXsKCWxpbmUtaGVpZ2h0OiAxM3B4Owp9Ci5qR3Jvd2wtbWVzc2FnZSBpbWd7Cgl2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOwp9Ci5qR3Jvd2wgLmpHcm93bC1ub3RpZmljYXRpb24gewoJbWluLWhlaWdodDogCQkJNDBweDsKfQoKLmpHcm93bCAuakdyb3dsLW5vdGlmaWNhdGlvbiwKLmpHcm93bCAuakdyb3dsLWNsb3NlciB7CgltYXJnaW46IAkJCQkxMHB4Owp9Cgouakdyb3dsIC5qR3Jvd2wtbm90aWZpY2F0aW9uIC5qR3Jvd2wtaGVhZGVyIHsKCWZvbnQtd2VpZ2h0OiAJCQlib2xkOwoJZm9udC1zaXplOgkJCQkuODVlbTsKfQoKLmpHcm93bCAuakdyb3dsLW5vdGlmaWNhdGlvbiAuakdyb3dsLWNsb3NlIHsKCXotaW5kZXg6CQkJCTk5OwoJZmxvYXQ6IAkJCQkJcmlnaHQ7Cglmb250LXdlaWdodDogCQkJYm9sZDsKCWZvbnQtc2l6ZTogCQkJCTFlbTsKCWN1cnNvcjoJCQkJCXBvaW50ZXI7Cn0KCi5qR3Jvd2wgLmpHcm93bC1jbG9zZXIgewoJcGFkZGluZy10b3A6IAkJCTRweDsKCXBhZGRpbmctYm90dG9tOiAJCTRweDsKCWN1cnNvcjogCQkJCXBvaW50ZXI7Cglmb250LXNpemU6CQkJCS45ZW07Cglmb250LXdlaWdodDogCQkJYm9sZDsKCXRleHQtYWxpZ246IAkJCWNlbnRlcjsKfQoKLyoqIEhpZGUgakdyb3dsIHdoZW4gcHJpbnRpbmcgKiovCkBtZWRpYSBwcmludCB7Cgkuakdyb3dsIHsKCQlkaXNwbGF5OiAJCQlub25lOwoJfQp9Cgouakdyb3dsIC5qR3Jvd2wtbm90aWZpY2F0aW9uLmN0cmx3LWVycm9yewogICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMjcsMzYsNDcsMC41KTsKICAgIGJvcmRlci1jb2xvcjogI0UzMjQyRDsKICAgIC13ZWJraXQtYm94LXNoYWRvdzogaW5zZXQgMCAwIDhweCAycHggI0UzMjQyRDsKICAgIC1tb3otYm94LXNoYWRvdzogaW5zZXQgMCAwIDhweCAycHggI0UzMjQyRDsKICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCA4cHggMnB4ICNFMzI0MkQ7Cn0="},{"meta":{"name":"jquery.jgrowl.js","url":"https://raw.github.com/badconker/ctrl-w/release/lib/jquery.jgrowl.js","ts":1544430113013,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"ctrl-w.po","url":"https://raw.github.com/badconker/ctrl-w/release/translations/en/LC_MESSAGES/ctrl-w.po","ts":1544430113016,"mimetype":"text/plain"},"source":""},{"meta":{"name":"ctrl-w.po","url":"https://raw.github.com/badconker/ctrl-w/release/translations/es/LC_MESSAGES/ctrl-w.po","ts":1544430113041,"mimetype":"text/plain"},"source":""}],"requires":[{"meta":{"name":"jquery-1.11.1.min.js","url":"https://github.com/badconker/ctrl-w/raw/release/lib/jquery-1.11.1.min.js","ts":1544430113395,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"Gettext.js","url":"https://raw.github.com/badconker/ctrl-w/release/lib/Gettext.js","ts":1544430113141,"mimetype":"text/javascript"},"source":""}]}]}